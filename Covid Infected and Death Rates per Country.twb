<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook locale='en_GB' original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidInfectedandDeathRatesperCountry' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.04yyahl08zii981a3xg7801ckrui' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1jsn5j0007kvta0zlix3r0moh08k'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/R/Documents/Portfolio Projects/PP2 TABLEAU C19/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1jsn5j0007kvta0zlix3r0moh08k' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_35B968E535EF40BFAA4D6D80736E6714]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_35B968E535EF40BFAA4D6D80736E6714]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_35B968E535EF40BFAA4D6D80736E6714]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_35B968E535EF40BFAA4D6D80736E6714]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/R/AppData/Local/Temp/TableauTemp/#TableauTemp_04k92h21jo6x1n18kd2cu13bju86.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/16/2025 04:59:05 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_35B968E535EF40BFAA4D6D80736E6714'>
            <properties context=''>
              <relation connection='excel-direct.1jsn5j0007kvta0zlix3r0moh08k' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1bemmiw1qvmlfq14pf7kq0d9mjn4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/R/Documents/Portfolio Projects/PP2 TABLEAU C19/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1bemmiw1qvmlfq14pf7kq0d9mjn4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_55CA0ABADD60473D844E730626BD397D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_55CA0ABADD60473D844E730626BD397D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_55CA0ABADD60473D844E730626BD397D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_55CA0ABADD60473D844E730626BD397D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_55CA0ABADD60473D844E730626BD397D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_55CA0ABADD60473D844E730626BD397D]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/R/AppData/Local/Temp/TableauTemp/#TableauTemp_021cbil0k5ioym10hw4rt1ok39zo.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='10/16/2025 07:11:52 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau Table 4)' increment-value='%null%' refresh-type='create' rows-inserted='85171' timestamp-start='2025-10-16 19:11:49.081' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_55CA0ABADD60473D844E730626BD397D'>
            <properties context=''>
              <relation connection='excel-direct.1bemmiw1qvmlfq14pf7kq0d9mjn4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.14f0k9x0k0u70r11ct1df1vooiyd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0mb8wv50jy2fe513w5yhn0hfm77c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/R/Documents/Portfolio Projects/PP2 TABLEAU C19/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mb8wv50jy2fe513w5yhn0hfm77c' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/R/AppData/Local/Temp/TableauTemp/#TableauTemp_07rvgkq1j13e6m19qbykk172e1b5.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/16/2025 04:59:50 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LES_RES_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C234A095CAAA4606AE3BB35D45BDA3ED'>
            <properties context=''>
              <relation connection='excel-direct.0mb8wv50jy2fe513w5yhn0hfm77c' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1k1rv1x00m7nac10fgp8d1vm734l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0lxxnj117ag1ly1blk08t1jejvac'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/R/Documents/Portfolio Projects/PP2 TABLEAU C19/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lxxnj117ag1ly1blk08t1jejvac' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RES_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_5A8E5A4143464E9C869E2093367996DC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_5A8E5A4143464E9C869E2093367996DC]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5A8E5A4143464E9C869E2093367996DC]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/R/AppData/Local/Temp/TableauTemp/#TableauTemp_17ja65h0vp80z410nbuft0f2pyui.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/16/2025 04:59:40 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LES_RES_S2' />
              <object-id>[Sheet1_5A8E5A4143464E9C869E2093367996DC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_5A8E5A4143464E9C869E2093367996DC]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#d3293d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5A8E5A4143464E9C869E2093367996DC'>
            <properties context=''>
              <relation connection='excel-direct.0lxxnj117ag1ly1blk08t1jejvac' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.04yyahl08zii981a3xg7801ckrui' />
          </datasources>
          <datasource-dependencies datasource='federated.04yyahl08zii981a3xg7801ckrui'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.04yyahl08zii981a3xg7801ckrui].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]' value='284' />
            <format attr='height' value='81' />
            <format attr='font-weight' data-class='total' value='normal' />
            <format attr='text-decoration' value='none' />
            <format attr='font-style' value='normal' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='text-format' field='[federated.04yyahl08zii981a3xg7801ckrui].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.04yyahl08zii981a3xg7801ckrui].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#aa0000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='11' />
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='text-align' scope='cols' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f1f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.04yyahl08zii981a3xg7801ckrui].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{9F152CA0-9259-4C50-9962-581973F52669}' />
    </worksheet>
    <worksheet name='Percent Population Infected'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf' />
          </datasources>
          <datasource-dependencies datasource='federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[tmn:date:qk]' value='*mmmm yyyy' />
            <format attr='font-weight' field='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]' />
              <text column='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]' />
              <color column='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]' />
              <text column='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1163' />
                <format attr='maxwidth' value='1163' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{03486A41-DB4A-43CB-A193-491817C76916}' />
    </worksheet>
    <worksheet name='Percent Population Infected per Country '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected Per Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.14f0k9x0k0u70r11ct1df1vooiyd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14f0k9x0k0u70r11ct1df1vooiyd'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Longitude (generated)]' field-type='quantitative' max='11740212.034259167' min='-15810557.215606455' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Latitude (generated)]' field-type='quantitative' max='11674260.975334741' min='647877.96313663991' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='bold' />
            <format attr='font-size' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='8' />
            <format attr='color' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='#76b7b2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='#ffffff' />
            <format attr='font-weight' data-class='subtotal' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='font-weight' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' />
              <color column='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]' />
              <geometry column='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1314364671707153' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Latitude (generated)]</rows>
        <cols>[federated.14f0k9x0k0u70r11ct1df1vooiyd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D5799873-E7F5-492C-ADFC-86F518B9F9C6}' />
    </worksheet>
    <worksheet name='Total Deaths per Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Deaths per Continent </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1k1rv1x00m7nac10fgp8d1vm734l' />
          </datasources>
          <datasource-dependencies datasource='federated.1k1rv1x00m7nac10fgp8d1vm734l'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]' value='161' />
            <format attr='font-weight' field='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[sum:TotalDeathCount:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-weight' field='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[sum:TotalDeathCount:qk]' value='bold' />
            <format attr='color' field='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[sum:TotalDeathCount:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]' />
              <lod column='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.3843094110488892' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k1rv1x00m7nac10fgp8d1vm734l].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{A6C92B77-AA23-4A7C-BDDF-938E377A064F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='99034' x='483' y='929'>
              <zone h='19977' id='3' name='Global Numbers' w='52806' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35075' id='5' name='Total Deaths per Continent' w='52806' x='483' y='20906'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55052' id='10' name='Percent Population Infected per Country ' w='31020' x='53289' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43090' id='12' name='Percent Population Infected' w='83826' x='483' y='55981'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43090' id='13' name='Percent Population Infected' pane-specification-id='0' param='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]&#10;[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]' type-v2='color' w='15208' x='84309' y='55981'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55052' id='11' name='Percent Population Infected per Country ' pane-specification-id='0' param='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' type-v2='color' w='15208' x='84309' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='20' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='152' h='19977' id='3' is-fixed='true' name='Global Numbers' w='52806' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55052' id='10' is-fixed='true' name='Percent Population Infected per Country ' w='31020' x='53289' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='55052' id='11' name='Percent Population Infected per Country ' pane-specification-id='0' param='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' type-v2='color' w='15208' x='84309' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='35075' id='5' is-fixed='true' name='Total Deaths per Continent' w='52806' x='483' y='20906'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43090' id='12' is-fixed='true' name='Percent Population Infected' w='83826' x='483' y='55981'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43090' id='13' name='Percent Population Infected' pane-specification-id='0' param='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]&#10;[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]' type-v2='color' w='15208' x='84309' y='55981'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{41D77D63-2F2C-4056-B636-D6450C76B379}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04yyahl08zii981a3xg7801ckrui].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3507166-9FFA-4B8C-9E4D-E4CE2A51FAA0}' />
    </window>
    <window class='worksheet' name='Total Deaths per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF6306F4-AE8F-4C81-A9AF-9EB5765C3933}' />
    </window>
    <window class='worksheet' name='Percent Population Infected per Country '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='211'>
            <card pane-specification-id='0' param='[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14f0k9x0k0u70r11ct1df1vooiyd].[none:Location:nk]</field>
            <field>[federated.14f0k9x0k0u70r11ct1df1vooiyd].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E6A4F554-A26E-4CB5-8752-E1D48C21D9EA}' />
    </window>
    <window class='worksheet' name='Percent Population Infected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]&#10;[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]</field>
            <field>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]</field>
            <field>[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83BA22D6-3223-436C-96A0-FA3479CEB6E0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Global Numbers' />
        <viewpoint name='Percent Population Infected'>
          <zoom type='entire-view' />
          <highlight field='[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Location:nk]&#10;[federated.0qbt0tm0h0fyzp1b1rtgu1e9adxf].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Percent Population Infected per Country '>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Deaths per Continent'>
          <zoom type='entire-view' />
          <highlight field='[federated.1k1rv1x00m7nac10fgp8d1vm734l].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3EC7E30F-9825-4A12-8E32-73DC153509E0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      voPtzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='105' name='Global Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percent Population Infected' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Percent Population Infected per Country ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNy9d5xcZ33v/36ec870mZ3tu9rValfSqlqyZcuyccO40WxM6C25DiQkcCE/
      0m7uTcP58YNcfrkQ4EICyU0HQhIMOMYFY2xsC8tWsySrr+pK2l5np532PPePc6ap2bKBQB69
      5jWrmTPnPM9zvvXzLUd85GO/o/fuOwAIXmwIcfFjhJDoumO1NC/yW1G9phCg0aQSFh+8awOX
      d5Wxyw7Cs/GR/Ol3ZzgxNoPUGi0kILllQxcfvr2DsqvJLRRpioNWmqIDf/TtUdySz73v7qcl
      6lJyYMGP8cn7jjIzV2Blfyu/8/oumjNpfOWx5bjHZV2Kr24tY3oLvHtTEtOQjBRjtCc0cdPH
      932ktEiksggpEQgQwTWVVuRKmsf2zfNvTxzAcTVSGvzm+1azfrmJUgAaISTRRIZINFb9feN+
      /CcYWuP5PgDFksfv/flOOjt6WNTfwyMPP8YrWqcGrRXa9wEFWtW+EyKgOa3P+Vnlc601QkoQ
      BkKaCKEw9+47wOZnngXki17/QgygtUYIEZy8StQCJa3qb+onF3xWYwCJQAjNzbdcxyOP/4hP
      Hp5gaVcLCcOh5Lg8sm2UXLmE1KCEBh1haG+ETi7jO1tHuXpVB4Mdkmv6BMJ3KExM84PnTrOx
      a453bLCQyqVQijJ++gzb9o/z7A5FxlnFr93cwvEZ2HLQI98DTz4zy7JWRakvxcG5BI6yaFrk
      EzUd7FKJSCxBRPbUzV+jlMLxNCMTPp2izLade5gvlEgkTOS7UqSsDqRp4tgFQBAzPYQf7mMD
      D/znYACtNWb4vv/kAiMzc0SsFCV8tjz3PL7yEKJGJ5c6lOeilRcQv/Zr10UgZY2G62lNCIFS
      CqUU0jDAMJAyiiCY60saF5P+QgQXr5f+QsrqxWtMGRBNcIwENFpDPBqlb3EnTzz5LI8rSXM2
      QioTZ3lnBt+xKZYcEBqQSG3gS5vxQonf+PI2+nqy7B6aI2JFuWl9mk/c3cyHb2lly75J/u4H
      wxjGAPdcl6TNFCgkUhh4ruKL/36EJ3Y2s7Q3weYD0yQjJsMTc8wNdPFpV7OuXzIyX2CwNUFU
      uRT8KDEzWrsRSlUWi5CCo1Nlvv74cXKFMiAwpUFTUwYzFiMg/Gxwm87ax3A3/pOQf7AvgUCE
      oicZ2LCOU/uH2Lh8CYZh4msXzcsjf62Dcwebdrak19V7UhHIUgrQGnWWVhDoipjGDKZycen/
      YqZP5aJVNSQNNLLK6UJUOLE61+AlFCDo7m7mc7+6lj9/IE5bNss7r9QMZFx8I8bfb/ZRUiO0
      QAsNKKQ20Wh8FCdOT5OKJUkmo+w4MosnF9GVcYiZEcqOw2CXyawd5dvbJzl0chbfUygpcDzF
      rhNT7DqpkVoyKV2ENjk1OsXQsM0Pdjfx2Q+spz3h4dqaLact3pjxqd49AUVH8Y2tM3RnLHYd
      nuXY6SlCWUS+4PPHX9rBZ373GpZ0xxFChjeE/yzC/ryjouk912XH4TxeuciyK1cxNp8jEjXQ
      Iorr+C9rD4TWCBQahdC6gQWC01WEa/C3VroqhAM6DPZfKgMhAnPa6F+24t7hU2dedFHnG2er
      GaovA6rEL849h9BoFOgIiWQSLTzakjDYFeO2FYp1HR6JeITtc9184dsHmF/IE/CXwDAsrl2/
      lMmZWTw/0DIbV7bx5Q/0MzQteWj7FD/Ym2fvqTnyZZvhBYuvP3EUpMXKRWkWtSUouop80Q7l
      roEvTBCaK5e18HcfGuTN1/ay+cAMS7qyDLYJFhw4M69Y220SjSWra5VS8MSQz+99ZTPP7DvN
      TK5Ut1aD4dF5nt4xRr4sSUY16TgYhoEUEl+pkI/Osz8/50NKScn2efz5CX7tNRbRcomnnt7P
      4q4ehFbMzi/Ay1iv0Bq0Bq3QWr0kJqrSJaJmqovQf3ulDFA5WeMrlPx1XHeO2teBzb+oO0M6
      HWd8PMeWA2NsOTTH7Zd3sLgZLMuiVczwne05JufylQuC0Hzwtf0IK8KxkTkEgvGpIj/YO8/O
      g2McPr3A0bECWgsMBafHc7zzxn5+/84sNy43uevqdp4cchgey9HRFOHXX9fP8OQCCyWf3rY0
      77g2w0Ar5L0Ys7ZBb9bkyLRgfTeMFmO0pi1Mw4BA4XHw1AKPPnsCtB8wNZU9CDZ7aqbMlj2n
      6WxNs255mj1DJRzH4WN/tpvlfUnashYyNBd/3ke9A1q0fdAuTTGPH+1ZIBsXHDg2y8j4OI7r
      vywGQOvQDKqZWS82zmUAAI0OtfiL+gAv6cYIEaAz1de5vxHaRwmBISMsak4Sb07xvtev57Lm
      Ih/58k5GJuaxFxz+5oeTrH1fHxMzPvdvzzN0aqZxD5Rm36l57tzYxZY9YyyUXFwtOT5WRggD
      LRUajdAKTyrQJt98ZoTJhTYKtk9fl2D7oVFA0JSK8ovXJmnLLOH3v3aQXUfH2HWmh5sGDa4a
      SPL1bXm+9MMFblvbSmfK5XhB86NjNjevCLZtwdY8+vwonhBoHQFcavadZrC/GylgSW8b/3D/
      IfYOzXN6tEjE1EwuFBib7GH5oiiJ5Et2xX5mR0D8Nfsuk7LYNGhx/IzD/T8YYnRigULRRuEj
      xMtbb4XB9Dn2/9kHBm9VsELXPhcVN1RrhH4JDPDSJkaVywKlfpbdBWhhIJTBL9y8iN+7czFK
      w3h+nsVpj8FFGUbG5zEkPL79OL9wJs/EzByFchklQFCRkBqNYNvhHL9xWzsb1yziiR0n0PgI
      KRodShHY4lpoJnI2zw7NMzwyB2qsqjpzJZ9tIxbFso2lDBxp8L8ePMXi/7KcjUs8BlrSzJSg
      Le4ghOTYZJkjUw4HRxzyjuLBLSfYO3QaQqeqcv3gRhlMTpVoTkfZe+g0Hc0ZDp2Y5Q9/bQNX
      DEaZnSvQ3mJgWib/WZwCpTQaHQAiSoH26GqL8Ee/uprHtubZf3SS7S+MAi/NfDl76NBdFVqG
      /uAFGKGBZho+rvKoCOnkRRmgYjdd6LvgZHXw5gWOVSgGe1L89h0dtJk5TEPQHTf4xCMFnt4V
      bMqy/k5Gx6YYGpsInBVhBmovlKihIuPE6Cy/+Q8naevuIpFIUCwWG9RvxdkxhCaesOhsjtDT
      mmJkbAZbeGihMHyYL3r8yb8cZnSmhGl5/PrtA1yxJEFM+ghMWlKa1rRAygiGIbhxqeDOy6Ic
      n0/QmhT84yN5TNPCt+16gKu64pncPErHuO9zd3DZYBPFkmZ2rkhzWhA1PDQCwzCpl5w/v0Pg
      K4VSHlIGTiZA1FRcvcrgVZcv4sv/5rN97zAB6HJp663i+NTR2Xkw/7N/c1HafaUaoN7xFWd/
      TiPHpWJxPvrmFbSYBZSSOEiiFqzuayUZO8bygX4ySYujxx0MZVCx00xTsunKdWzd8QK+rxAY
      uJTYcWAcdWgCLUI4UhOgAxgBw+gAnrxqTR+fesdiulMOm4faeHDnLPc9dQxfShzbZWzKIxmP
      8JE3rOCe65qIGBrTskhn2wFwXRetXWynTDqmMAyDFe2CozOaN796LWnT5dNf34bWEoTX4Gj5
      WlByHI6dmsX1JOuXx1jSmwEEZiSKYZgYhkHdNp0H2fjZHg2BJ60AhdbgOBqtBQ9vyZOKG2xa
      I9C+Am2B8C94vsaTV950SLA1W+YcedMwpwAyBRr8q0YxEwjVV8wAumrzGwScHaI/BNLax6Qp
      HeWX7tzApu4F0LB3FCZKglsHFYszPr5rsqY7Rk9LjB/tkPh4wSJ1lP6eLP/jzk5+a2KEoROT
      SKEQWiIiJoO9LRw7NYXjKWIxzfXr+ymrJKWyzfjULKMTsywUbFxfkI4Z3LE2wXX9JifH8+w+
      OklvR5ZF2Si/cOMAG3oNhosRVrc5ROMZCIMnntIUi2WGpg16mwQdTWCaJis64L+/vpUfHS6A
      NlDCD+zKEAaUUiK1plTy+YMv7GTd8lb+n/etorUlQ1erIJOMY5hmcHzlNmuCWySqEZVXcnt+
      qsN1XZTy8X0XhcU/PlagLVLiT/92N46tueaKHk6NzvFytJ1UGq18VCX6q3zERTyBqukfCsUK
      IhkgP/UwqfvyUaBqkAsBIggwVRxgEWoEqUEmLN72+mv5lXULpK0yCskPhqCvLcrQuMef3X+U
      sg95V/LQM6dwVODMIiWpmMWbb1rGDX0O922fZHLeRgiF0CbdLSk+/V9WYkUtDp6cpae9iysG
      stxzY5xsKs4br+4kXxYcOVlkzvbYsLSJdEThuj6xdCv33NzOO67toiQSKDNFR8ZgzpbkbMl8
      SSGF5tiUz+7TLkVX0JqyeH5E4nsO7RkLKQ22HCvz5YcPc2xkPrBP625tPUpRLLsgY2zeOUpn
      W5rBJUniUSuMnJ+zs9Wz/DwhQ0IIPN/Dc1ysSITRKZv7tozg+JKRM9O86oo+nt01jONySfQf
      aHMfrb1AQFRh0IpH2wjHN86pZqVUYPSzj3lFGqAqsOpOWn+ReCLCh9+6jjetLpG1HJQymLIj
      DI1Mk4oKhsZKjMyU+dpH1tCS0Nzz1y7DkxYLC3mUEKwdXMyvXwNR0+OOK5dy9MSewMQRipn5
      PAdHyty4qplth9L8+hsWs+voNBPzBneuMbGMMuWrUjy95zQPPjfJmt4Ed21oYqYQoSfrcuPy
      DPMluKLf5IGtY/z75hI9rRLTimBKWL84ztr+Nr708FFy83mWdyfZOTRDMpHmiU9czd6REh/9
      8lZOjc+iqi5VbQ/OHtMzBX73NzfwppubiSeSeJ7GdnwilmRsyiVX8LEdl5X9SWIRo6rifx5Y
      wPd9bNtGa4UVjWEaBrduiPDoDovlfR0cOzzC9JxDIh4jXyy/5PMGpo+H1mHqQ7grgS+gUUrX
      TMiL+gN1vzvr3ly6BggRHyFrQa8K9i/qNIBGkEpF+MBrulnf5XBgMkJr2uAbuyTffXaEnUML
      7Dg2w/tuWU4iEacz4bFuIMtdG9t59sQC+QWbqal5ZvwEm/ot9owqdhyeIhGP46syrrK4dk0H
      Ny3TCDPJZM7jhsEo205prl4syFgu8Xicb2yeoFCCI+MeD22d5OubJ9hxfIq7N7YzXjCYKVuk
      Ioqth6Z4du8ZDhwrsPf4LE/tGuGB54Y5MTLP6HSRg6dmyBccNqxexJP7JvnMtw4xX/BwXC8U
      RBezSsF2PHbsn+XGjX10tMT4wj+f4luPj9LZGufjf3mQZ/dM8vmvvcDOwzaelvR3x4iYPx+a
      QAiBaZpIKZCGxJAGpjTobY2xvt/CVxF27p8gFo0xO1+6OFdX7f5AymulGgNgNJqH55PqZ8+t
      ct5q4LHu8JdhAgXErysOsDRDwg99gioNaAxD093VyQ92T3BkLsqyjih/8fBJUhGPd9y6jH1n
      pvjDu3pY3uKSiQmWZBWLmw2yzW08e2ievO3S1ZnmjjVx+tqSDBeSfPiN/fS0RNl9ZJ7R6RyZ
      tsVY0Thz+SJvXGvh6ChdaUjHBGMFk6/+8CSWFcEXmqW9bew+OsbMvOK61a2s6TZ46ABs3nOK
      rYcmEdpAyzICDwXYngrC6WHEWAvJ0dOT7DsxzdqlnSTjESZnC6H8Pz8sVx+KL5RsHt58ij1D
      eSZmXB55+hA/2jXD1l1HOHxsgvxCkWOnZnjsuRH2HM6zdHEzna2Rqkn5szjqg6CEEChoSnaJ
      bBKk0Hzr0REOHJ/GsiLkS4XKLy9y1pDYVehX6dD2rw9+VelNNyTBnXd+1cyfitCufX/JDNCA
      /MiKBqibFbU/Hddl/7E5th+awxMJvrtjnJHReT7//mU8sHWcqCHoaM2CGactJTCEhzQgYhmM
      lSwODC+wKBvnVcsTZOOaDQNJUlHN9Usj/Nuzs0zNFbGicXqa4YbBBNmYYiDrkjA9DENycBwe
      3jlNczrF7HyB69Z0cPD0CJ6rWHAEt61r5qrF8KoVafaN2pwZcwEZMoJJBJ81/U1ct7aNa9d0
      855bljNT0oxOzdOcSXJmMkfZ9urWfmENENCHoFhSHDw2zaHjo9hlm8np+RDiC45Tvo9vOxw5
      M8+uow5Le7Ms7rBCx+5nlxEApAzRL1/hOi5a+UQtn+72BN9+/CS5fBnwuCAMqjWowOYPXgqU
      QqgAXYLz73At6bIxNaeGRtZ8hUBZ1679MiPBdTx1jgqqUznaIFdYAAG79pzAt4pcu3IJp2Y0
      T++f5D23Lkcom8kFkw3dCkNGkFIwkHW4aTCG5/dxet7hqztdPnlXhC7fJm8LpgoaaYKLz8PP
      HOGyntWcGHfZesxgvBjlPRsUS1t8OtMGG1b3sKglTjFvMdgmSRop5rSmZPvETY94xMS2Bddc
      1k9XdoKSA88dGGVxR4K3XruIuzY0s7g9hWlGEVKyanGGZ4f6+LN/3obn6Usw0ivojhfEOCqx
      eIKcFB3eoCBLSiE8zQu7D/PBj0/znc/dzOqlyar5+bM4qlCjBmkYjM8KSrZBX4dJd3uEeEKQ
      ywkERuOenQ14aR9dfYUMgQpRn/ODMUoF8LRhGGhdywqtfK8r7+fxEy7IAC9ud1Zgz/rRaAYE
      9zg4xpcuWlk8u3+EnUMTLGpLctuqKO1JSX+7x1xJ8thhePNaF+UpXr8S7lqbwjCjFBxFuVRG
      AHHDYGgqyCf6zbdezlce2McX7j+Acn1SqQS//661DLQIItEojxzwSccjFG2Xj799GT0ZD0/1
      86f/eoC3XddL1Ax8ltaU5l1XRUhf14eUkgOjiyh7kpuWQSqZRUqruqpXr0gy2Bnn1MRqvvq9
      vefsyoWdsbpMRSFQ+gLxE11xfgVIyOXzzC74/Hy4w4EWFAi6W+GJ7Qu4NmTiPqv62rBirTy7
      7UAgy6tyMhSlWoNSaOUSFLvoMAhaO+5ibq5SKohAV9Il6iDpc4uPauPFq2DOGrqOYy+qkKsC
      LvyjYosJgeP6xCwoODBVhKMTmj1nNGXbY9spg+8NRfjufo2tTCKGSyYaFFEIaeArzdMH5lnR
      k+aXr4nQ15HBdgQOioVCHscLIEzXU8RMxZO7htjUH2FJiyQajfIL13YTixmUParMaQhNf7Oi
      LeHTlvC4cZnB7SstYtFEkF9UvywhaEmA7dp1eP2l7Z+uk+QBktaoRQW1CqayYzMylQ8EITSY
      Sz+roxK02rQ2xr9+b4S/f3CO1myMj769jaZsulGSCw0iSHJT2g/ew5oCqAmMi2m+mvbR55g/
      4YwaGKJeSJ1XA1xU+ovaHxdLfbjY0AL2nypwz+ee55rVHbRm00zOzTMxW2LFohSDPSluWJ4g
      KmxsP85fPzlNf2eWqOGz/0yRb/9oDNdW/PY/aU6cnq8yo1IGWw+Mk8vFmC54PLl3Bse1SaWa
      kYaFQGEaCmGYfHf7OO991VJQ4eYrgcIgEjpJUkhMM4LnuygtiFhWdf4/PFyiWHa4FKCyMVWj
      Ebs+HzxX/d4XfP7rBxjozXLliuTPPCJUHQJQNpevauMvv/ECtgfPH5inqz3DzHzhrIOD6g6t
      A6f3YikMFxsX+l0lZHA+M+jS4wDVe34exEOH2K0QoGUQDEMH0ksIBBXbTGIQENaW/aOgJ2lJ
      R/nYmwa4c32UmPTQwEMH4CvfP8qRk7MoDJA+ni+RKLRw+P4eF6FMkDZSG2gt+fdnT3O/EBhG
      BEMItBPh8988wMnxdj72um6SFiTjMc5MlTkyZZArK65cJPnRCQNpGNwwAIZhorWkVHYxDJ8n
      j3hc3hOloykWBFWU4siZeS6qQHXjHom6MH6QQhXi2kKAlKFUrzchA0KQCI6enOFTXxvhi7/R
      S3dbnJfKdD+tUY/8QUBoQZqHJB4z2bSuja8/eJTP/sNe3GpktvbjoMTRD0yg+jrfS55Ho/1f
      mcvFxjko0ItzXkW9hCkQsna8DAldC4WBi2lCU0Jy+WAbjqsolH2UACVdtFBh9NRAS4PWjMWH
      b++iNeFT9CI89ILDp+87wvBEERW6hrqK5YIgCBYhFQIZfqirdrXWLj3tSeIxk+lcjkxTB3/5
      3RP823NTnBzJMZPL88O9C+w4PEUkluYfHx9mRU+KTCrJ4YkgCvzQfgcTnwe2neH0rEsqanH/
      1gm+t3OUzXvOBNauqMvjObv0rmG+OmCX0DyofBZg2/WKtKb6hQj9KO1TKpdpaW1jw4oEDdV1
      /8GjlgZdsb3B8xyU5yOEIBF1iUVMkukuDh4fD/O5aja50DqEO2tF7i9Xy10oY6EerKmvXISz
      NMArVa9agBKSnvY0v/KaLpZ3RRloi9Acc9kx7PHpB05x6FSeiBHFMiBXgiAxyubUlM/7vzjE
      8p4UJ6bnODPm4yoJ0gsIvCr1GoMh4jxSWGtNcybD1JSN7bn4SB577gCO0iAsDA+ENDg+ssDR
      MZ/nDs6jhWLL0ChxK4lSHq7n4Xk+WglsRyAMhz+NxMjbQUcCUZmLrrPlX2x/zmKQepV9IedZ
      a4XvSwoLC8xNT6J1W+h7/MdzQIX4fd/H890A3ZISrRW2U8JxbCbnBMt743zze0coOgJLC1Sd
      CajDNIdKsUswftxrC/ar6gfUfXPpJtDF5iYkCBPbKXPzqgRdSQ9DOkhDcN1Sk3/56Eq+vcum
      r9VkoM3kD75xhKf2zSK0gUBxei7H6dkyAh/QSKFBy8CkqjMN6sKFAThWF+1DBMESpVyW9KQ5
      dHIMLSxQBlcuzXLFsixRS/LNzceZzzt4CuKJKMVygVJBUhR5pAqCOQjQ+ME2KciXnQC+FCEL
      vkxCvFiK7jnfhehpJh5lYibIuTcuGbr48Y56pKXilBvSwnGKuI6LYUZ4enee4TMF0PDl+w4y
      PlXEAFTd+nSlwguNEAHWL8TFg1oXS3m4mACv7q1o3Gfzpfy4/gRnIz9BeWNoCmiJoRT5kmbb
      sM9dq4MccZAIKbAoc/c6g1QMpHD5X+/t531f8Dg8Po+hAs5UwiOAWCtyvqLuK967gRSBulSC
      YON0cHwqkWTj2na0ltxzQwuHRsr87UKJ8dkCGwZb+eePDpBOWSgtee+NnUjDYMvhHF/47imG
      R4sgFBJBe3satKBQylEogRA2QRGHGaZfB9VEaAmhRBPiLOkVFvDXNurCN+zsZC4hjOp+SyTg
      Mzae44UjUxw7U2TFknTVs/uP0gMVe1spha98XNfBMiV2ycF1HAa6Ipja458fOcHkbAnPrwCZ
      AUcLpcAPbH9RMRCrxPnS5vBSLRYN1dSds4XMSyqIqVzs4hcUoTkjkGacJ/ZP8toVrUSM2r1X
      ShM3NSLcvNYo/Pk9y/i1vzrE6dlSkOasw8nWIiMARCMxBJLbr+7k1ss7ODlZ5PPf2Y/vBDiv
      kIo337iID78my2xRU7YV79ogkaKPT3/jENev6+BMIcLKpI8UsLITlHY41WIxOjGJVAbNScl/
      e8863np1M5YhuH9nno98eSuL2uK8/fo+EhGf72yb4Z5bl/O950colF3mCyWOnJrB1Ra1dhuX
      Pi5auIGLMKDkFBmfzLNySapx33+KoyL1fd9HKQ/fD2x95Tls3V/Atl2uHLToyipakxpe18fD
      z5ymkpJcbWtS1R46zE6o7d7FUKCXY6aLi9Rcm2dj0Be6aJUB9IXt3QDIEHhumdddsYyI6VfV
      lvJU+Hsd2NZh3siqLsFr1ndz/zPjFJ0ySqrGDQi8QGJRiWEI7ryqizetNynYUR58rplDJ2ZB
      CFqzSe68sgNf+1zWVcZzNSenNU/un0ULzbpuk76UjSACSgXxCM/gM/cfxfEFCcvjUx+4hrdu
      yqCVz94Rh8/dt4s7NnTx668b4JpeD99TeDLBu67N8ss3d+A4DoWyxyfuO87XnjhacXNf9jhf
      Vm3FRFA+TEzN8cj2IletVSQTxiu61isdSilcz6NcLhGLxTg47HL/5jnGxiboe/9S0inBtgMe
      B07YQSFMBfEKR8V/qOQQQZBKUfGppZTnIDqXOmop+7VrvrR06DpYq1rfe5bzoOuFdOWCgMag
      o0lydW8g5YUQyDDUL6hE/gLinyxIvvTYDE0JyX3/4zI+/OV9HBkP8HVDqyAALiTgcNnSTl6z
      vpktR2a5rLedqFRMzAUNswQ+07NFPvudQ7ztNavoSElMXH6wf4HpfLCOU7NlymVFLBZKail4
      aqjMrqFxQHL9hl7uvioDKqjq+uy/n+KKZb186A3t9DQZWJaJNFyWdxrcv3OOd1zTTDqZIJ1Q
      /O5dfWw7PM3hM3N1O3EJQ6vAWqpAP6LOxiYw+5Q2yOcVB07OotQi0CEc+h9kAwXEZeD7mke3
      zOF6it9+VwtHT2e49/8cJZuyeODJk+RtH1MbVdoP/LMA7jw3gTBE8ERgLVQo5uxsicpojKVU
      jm60Vl4MnLigyKpcLCD+CgoTMkKdz9l4siAGsKQzQcKsdOmqLSGwxTTCkGw5qfnS4wu89dpm
      fuv2LMtafXo70ty0vpXmJgNfR7lmTZYVXWm08FndHePDNyX4wze28MKo4r6tc8znymjgxis6
      efetg+w8MsNswSVmCU4XokyX4Ma1LfR1ZlnakUQjUL7CdT08D+7bMobjaQzgA7f2YcpAM5yY
      0ewbnmNwaQcT85pcrkA+N4dTtrl9mcfuk0WmpiYpl0vMFn262pK8/3UrkQ0t/156uFZCkPGo
      fEQVC6+hIkKYaKnwfJifX+DpPfPVyPBPe9RLUNexMS2DmzdmkNLgnx7OMZUzed11izhxeh7H
      ASE06pxWiAHhn6+mq+L31YRBkGYvpYGQsqHEsTHhjeA4IRsEdn0l5fksnQYNoGtHogUNN/Rs
      X0DX4au13xtIHG5aO4Apqfs+6AMkhEBh8uBum12nSvz3NzSRMAOJN10SNLcm+NM3tzNb7ONP
      7h9hfKbEp35pkP/3W4qh0QKIFqKGz7pOg8/eP4PCByLctLadt12dZrJg058NsjPbEpr/elOS
      f3khgvJd8iWbQhmePOkzPD5LX1ua728fQwtIxA16WqIIofF9zQNbp8nGYrxtTYFc2aQ17mEa
      EuV7SEMQEy7f2OpyamaOIxMlNqxYxMnRuWCrlIFGIcSl5e/U9l43/L8ev5YaOtTCdNUAACAA
      SURBVFNJntk9zY3rU6STKSqVTj/NEQS6DCLRKLl8kc27SszlHF44PMWNV2SwyxZvuWMpLxx6
      Hs+3aOwCUZe1Sc0sOSeGcg5aVIuZXGhOlfdLkQ3naAAhgqIGKRt7/DRwmxBVBj17svGYz/IO
      iQzhyMrvpDSQBmw9IXhw5xS/dUcTUalDYhHMluAjt3XTlJD0ZHzeeEUzl/W10J70+cO3rMRX
      moIjUBpa4x7xCBgKwOe+zafJlRSfeVsztw4GhJeMCiKW5JalHpf1Z/ja5lGilkl30ucz9x/j
      I1/ZzULZxtCCqwbbWN4RtCeRUnD1iiwLxRKKKIubPJTv43gehmliqyhHphy+8v1hfrh3ko+/
      qYPfuS3FXZt6ee9tg8RiP4YmVw0Sq7bntueyUCrQHFXk5mbwvIDZ/yNyg6QMCl/iUYtbNyW5
      66Y0nR1pPK/ExlWCXYdncdBo4VUTBxoitSFtyLoesufP46mnoUbpX/l/Q+F7nci/0Pka1kE4
      uQD2FkhhIM4y8LWQIA2ENECaaGFSzztVPBjB+oEONvUadZMMpb/UjBQS3LdtgnnbR2mJrxUq
      LGgYbPZY1ebheR6er1ndFeHjd7cw0KJZ2qw4PT7LbFGhFVjS56olaZQIekUeHJ7hfz4wzP5J
      E9MwEEhMyyIWj5BNCEZnS+QKYFoGZ+Z8fF/iKQkEdczXrmonGmoiIaC/LUI628RnfuhQcHx0
      KPGUhp0jJhELPvKWjdx503pGS0l8LN5yVZpPv2cFG1f1BcE5GTYI0OJSrCHQGqH9UBE0RnyV
      AtfxWNIdx3EcisXCec2In9YwTYNIJIJAk8u73Lyxnc99/SgPPbOA61uBna/rJbJGh2sTWhIY
      n0EKy0vRljo0jYQ06nxSQQVYqgu7U4sX6ZoddLbLQUjFNYVUtfyr/xomFpo+Ovz73BlqNq5o
      Q4WOb4X7TNNASoO//P4ZHtp5hg/e0kvaUhhShp5/oNp836dctvE9n/6sjyWD7hDNCY91K7o5
      MeWhUXiez9rFcaQhQzVq8tCWYT74xR08NRQwkURgSBPDNCk4mgXbY8twhK9tnsYNQ++VOi4P
      8FSYUoGk6ELC9PnAJp+hmQjxZIJMNosVjdKWVNy2ro3re4t0NxksbbeYdywEAtt2effNfSzu
      TiNUBKHD3HehXlRMN4Tq66RY/c8qx6xfJkgm4hRLBYqFArUYyU92VASd53mMT+WZnnexbRsh
      BM1NMW69Osuf/9Y69hyYZvsLIyg/NAPrsmYD57eylpDw9aVoTFH3Xu8r1L8qPBCUVAZNus7P
      YrIyGSklhmGcV12c62zU1FDjcT7/58Hj/NE3pxkvBLCWlMFxnjJ44XiRZV3N3LjcxNcBJOp7
      CtvxguJmDZ7r4/seAo3yPTQaQwiWtwt2nSiilIdWinW9EVqbE3UbG2EhL/nEPw8xXbYYyUHO
      NTg5b7JQsFnZm0ZpTa5UwqDRfIuZYIbhVSEFi5sFPa0Sy7IYbPWIRiw838OMWPS1Wbx20KMn
      5bFpUYkXRn064mU81yFqCVYvirK4u4VoRCANHTJVYF69FCK9uPmksaSHxKNYcnhub4lc3qZs
      O+e0AP9JDR2aMo5j8/Tzs+QKglg0QiaVxHcdMjGfX7x7gIWFQkDgdQHB89n5Lx5fahwXO74+
      Mn122nPt/41zMPqXrbz3zJkR6p/uUpPw4Susuax414FqrhTC1zGHBkdrhkZz7Bn2ecOGJuJR
      iZYWk0XJ3z81ytyCy5FJsJJNdDcJDkwYeNogFVW4rovQGssyQu1ghBJHMdCZYF2PJGIET1pp
      isG+ccHhU3MEIXSNwGVmAaxkhGuWJvj4t8b5u0dHmc0t8Adv7efyDpvLlzbz2O5pSnYNZnvD
      xkVsXJoCEdiohlR0Nyf45LdOcNVgKxnLwQj9opgZIBtSa9rTBqs6wHMdbLvEbFnw/SGDKwaa
      STe3ctemLqZzNtNzLgJFEEapgXpVTQ2N4FFln2Uj0CA0XL2mlVdf1cTR0y5ffXCG8RlFW1bS
      1hyvtln5SbrENdqzact4PLylwOkJB9P0SRhFfN/FMgWHRlKcHJkLEt0ECC1Qyg8p6mIzrATE
      KkfW2zUVwVs5rjIqNlBYK3FBYaDraDgYxsCyVfeeOnOmqjqCV32TKxli8RVIyqDW9/+shYha
      qeTEfIkrB9tIRAx+66ujfOXRM4xNFym7ivGpAjN5j2eOu3Q3x1jbFYTJpRREoxEsy0RIgVJB
      KrUGYoYiInXgmKNBGzywq8ixM2Gr7TD1UmMwOu0wb1v8yxNDzOUd3n3rIItbTBZnNG1JaG3v
      4PFd49UYh5KQjFn4WhI1QfsOScNmVVeM9iRYkiDHxQjWbts2jutiyLoSPAFCuXhKkHMMErEo
      92wy2Lg8y7eeHcXVJkgDdR6Ds/pBddQybesdYQ2cPJNj16ECP9w+hTQkG9d3sqLHI51KYxg/
      WQao3G7P8zFMk4gpuGJllp6OCN9+fBQDh/asQVM6SqaphV2Hp5mfK6IxAr+GCxB/ZY1h0RPh
      syVk+P+A5ow6aD6kgXCtWoNo6Bh9VsCrjn+CS9UzwODqe4dPjYRHVCR6nWcuK5OQnE/qX2ho
      DcenPe7bMsHWo3kKhQDbRmgWtcb443cs4Z0bowy2KSKGIBoxQ8lvULbtYFFG5SkyGl8Hdrrn
      BTh52dXcv6fEifEcAhlIWGUi8ckVbbYfmg8cXV3iQ28c4KYBFTRv1YqcbfLdHWMoHQT6Tk/Z
      zJUk928/xbQdZ7DFQ7suqYhCaB/P84NHIdku5bIdxBF8Rdl2An9DSizTRCmf7oygOQ6ruiOU
      PXjuTISWTJS9J6ZDyLLi8Kk6sm68KZUuG8iz2UTj+JrhUY94PMDFv//MceLJXi5bZhGNWCFT
      X/TWvIJRM33L5RJP7MjTmo2xe6jEPzxwmPseHeb117cTiygWd0X51g9GmJwuBL6j8s+JxF6o
      gqsCs/b09qKUwrbtoORR1K8t6BYRNM5SDXOrfz/vKuoS7sxKqSFKVM5bv9bwRPUFDATSVtea
      01W0Sl3NB1rAnmMzSA1ahp0AhAFasFDwKZU8DGTgyApB0bMo+ZLmuMK0LJSv8F0fIWWQcqw1
      hpT4vg9IoobiI7e1MevDkcPjuGWIJCO0NTUxMjaOlj5aG2BGaU2ZSKkD/wFBOqJIJSxyeRt0
      gO+/ZVMTr17VgetpotJFyKCgQ4Q9RDXgej5aE0pxEZqNAt/3cR2HiGWitEt3UhFLRHngoMXa
      RZKU0ULZHWR4ZILnj07jIQlzgqmGyBtprI4h6g7QIFDEIg6bVi9iOueSW5A89uwwN15hcuXa
      JOKnkCothCASsdh5oEAsGmP9YJw3vKqL//9vxjg57pPNmIxMS5QwUMiQUM9PlBfyi6SUTE5O
      4jhO1UfV1IEJ1RaJFUOW6p5dik9h9K9cc+/pM2Mh1Bm+QudFGCF3IhC6Yo+pqo0mEAjD55aN
      y5iYmsQJgx6a4Al8IgzlB05+JRlKUHI8th7LcSjXwqMHPO7fNs3/fmiEv3pshH1nbLLpBIsy
      wQSVDp7x5Pse0UgE07LwXRdDStqTPiu627DSHRwdncOKx1m9rJuTp4MnSkrhgjKwYnGuWxYN
      0hyAljhYiSaeOzCHEhqtTUbnSrzuinYyEY+JnELqQOorX9Wi2UJgmSZaayZKEeZtSToaIDam
      aQQ9hKSBMC3yxSJdacmxuQiJCLxqaYR3b0ox4ybYdyJ44IcSKogAV3VzhcJkdd8r5kEtnVcQ
      seBX3zrIB9/azWuv7+Op56eZLUiuX9+KaYo6U/THOyrEOptzeOy5eZRS9HREeGTzab75vSNM
      TJcou5rFi1p44ZjL2GSRYyNzQVC1Sufnn9nZRFsxLYPmWGHFmFYgQmSnEkATded8iYQv6v4w
      lq648t7TI5VsveAkQgaBKxHitME1NAiFlgbC8ElnNZ1daYpFmzUDGa5b2c6OIzkE0JKN4vk+
      WrsIHQlvZICIBI6gYK4gOTJ8CtPUDHQmuePKDga64hhmnBlb0pUxSZlu9cmTQaF40GuoKhG0
      pjvlck0/ZLv68SJZtu06hOvaVPwXIV3++B3L6MsGKtgwDbTyicTSHJkSzObL+C5Mztg8PVTi
      eC7K1pOam5ZaQf66DtIjjs0nSFpBzroVkcwVBffv8fCR9GYFaPAVJFIpss1taC3w7Twj83BN
      v0FHxuLRgz7HJ0to32V2wUYLGbhyFce3emPqHjBYBR1E1VRe1ttKd2uaJ7fPM7jE4p2vW0RT
      MkpvVwIr7HTxk2CAwLzWlMo2HVlFLGqy71iBoRMzvOdNa1i6JMt3N5/kXx46zuNbjjE8kgvQ
      KeEjVM2KODuV4exI8DkSPEwNCS5f6fpciwNUTZCXMBqK7QFT4lFtTVGxxSoetQi68ApTBBpH
      ayxLccXKLt5/Yxfbhgs8bOd5+5UZupKKf33GYiFX5u6b1/L41iGOj89j4YU1XEbDxVPRMn/9
      sZu4drGL8l0s08D3jSokGvSElGG+edAHslJmZxgSpYK0BcuQmPi8aXmOtIjy5BMOAhd0jJam
      OD7w3FCO9R1xAHzPQ0jJ/jGXybwdtjb08REcODnD5EKZ69f28LF/LRCNSjb1x8B36GsTDM2k
      OT5RRDo53nBlFlPafP57k1x2Tw+ZSJDhWigWSTc105TJ4Ls2y7MlItrn8WMJetsTvN7K8PYr
      k7z/Sy9Qcgn2uK5duA6JrEYMtWi81hqhTTZd1sy7X58kV2zhU391mKvWdZFpSrBmmU08alKp
      Ffixj/Cc2UwMtM3UnMO165r45Td1E4lE+IVbuvnVtyzn8a0z/PV9h9m9/ySIS289cjZ8WQlm
      1T8X7OXGPRoixoDxrtfecO+p8Wmk1FgmOF5or0uPpiysWNbKqtVtJFI+HS0J3nRNH79xU5KD
      k5pMxOfW9X1s6CyTsGDvuGKu4PLW6xZxZjJPayzCn90zyM3r2hifdRifddDIsB5YcsPqZi7r
      iSAEKD8gaBU6NVUViMbzVVBYU+V0HX6vOTxrcng6ytd2uCzYPjsPTiCET0driv/9ocvZdabA
      3mOTJNJNNCejxC1FyYWvb5snlW2jZPsUCg4agdAGpVKZQ8MzjM8Xee9NffQ1w54xwdBcnG89
      fYT5ok0qk+TAmM8Dz51mcXcru0ckm/olltRBi3DPwzQM4vEYUWFTKjv4MkZrKmDcrcdt9h6f
      wXYllQc+N+b01Dl7DdIyKMS5/souLh9M09WWZMPqJj7zTwdYMdBBb0eU1qZYFen4yaFBklgs
      xqqBDF1tMQBc18ZzXYZH5rj3izvYe2QknHv4UPE6DL6RN+tTJc++TuVAVQ2WivMwwCtJPTG+
      ePcN916xxuKDr2li5UAnm/eN4XqSlmbFbTcs48qBbjYtSpBp6ubutQnuWOpjoEnHTK7q0Sxp
      ckMIEy7rSTJWinLLoMnzJ/PcsDrD61dLVndZ3L6hjcNjDpPzZXwftJLsPT7Hq9a0k4lJXL8W
      NAuSKmq2r2mYoINwyo9OChZlqhE85m2Tbac12w6NMj6nGZucRookV67t5i1XWNy4sgkr08fB
      CZ+/f/wozW3d9KZtruqL0Zu1aO3o4ejIHGWnAOHD+5SQWKbmI7d3sKrN4/qlBvF4khM5ye7D
      I8wWfXYcnGLt0kWcHD1NOh1lrhxhZYdEovF9l2IxT6lUxPdcTAlSmsw6Mcq+wPYEh4anmc85
      BKuqrLdyR0M4L3yUZ71mFlJw4PgsuUKcFX0RHt8xw0NPD7N6IMtt17YSjURCX+ECkOMrGPXB
      pUb0RuM4DvuOzPLxv9jL84cnCKr0oJaK0NitrXGoBqiy+kQgSeDUV7rEnQVvXmoQ7XzD+PCt
      195blPP0pMsMZH0G+9rZfWqa6y7vZm1XM3f0u/SlHVY0OfSmXITQGAakI6oqlRACKQTpiM+r
      B+O0xj1uWpHkqiUGwbOKNako3LG+iTdc3Y1hxNh/appcQfHvO0Z5dJ/N3z81wVTZ4urFBp7r
      BSZP+GRvIcB1PUZzJh//5ihWNEpLOkYmpvCUZH23z5yX4XtbjtC3uJ21g1l+6fosq1o9WuIu
      OVvztw/tZ75Y5hdv6KAl5hCTHtm4Zsewx0LJ4703L2H30VFs3wrbrmgGl3Qx2KqwTIPFTT5L
      2uPsGS5x6GgBpMctV/Wya2iGy9ct4uG9x0mYUVZ11WIDvu8FTrSCVBQcHWHrsGBsfBQrYjJ0
      ZrbOD6jPeagjkrODjUJTdjUjkwt8/9lp7ntsiLJj8qoNffR1x2htjjcQ/islkMpazoYvofGh
      2HsOz/PfPruTHftH8KjQctiISqkLsmJF+p8NkdZ8g9Duf5Gs0UvtJVQ1gT58+3X3zpOjNRlM
      cnHW55bLOojH4uScGKmIoDPpEjUCFSQrqBAVpyh4BaF4EaI/EJEB4QRwtgxgTEOSifpsGjC5
      /coe+rrSXLtuCWsXRfnRC3NoKXnTFQmqj8QJPfyRecFnvjfP3zwxwpreBLNFm+eO2wzPBtHr
      PacVj+0aY75U5u6b1uAU5hnsTNGeVBj4dKQkx4sxujszCCPC2rYw6CYU82UfrBT/9QZJR1sb
      T+2dCK4tJclMllsGTSJmYKrM2QYP7zzDbM6mv7cJTzkcOrbAkcl5/uTNqxkac7F1jN60E0KW
      teJ6IQWjeZPZsuSH++b44fZj+MEdrLX/pmLlNcYEzn6QhgCKZY/Z+RLCDO7Fh96+hMuWNRGL
      xqjXKK+EAeoJvQI6VJih8rdt2xw5VeQjn9rGvqNTAf7tB7RyFk9f5DqN7VDOiRVUGOQ883s5
      6RTVOQmBqXw/SFqseNdCsijl050EV+cYL0Twww2AOklQJ7SqllpFTRlhwAwRBpsCeNB1g7bj
      htAsbbJZeW0Uw/SRMsJgxzI++8gYu8csfA/G84IFW7LryCTbD81x6xVtfOKdA6zu0EwUDD75
      SI4nHj3FQrlEzIywaU03ypvnm0/sZmHB46k9I7z71hXcMBDFkIojC0VmfQc54vKOVRkEGiUE
      6ZggHSkhRZQ71sb4fFOMibkyg72t/MarY8iwgVfeMTDxyCTjoMscHp2js3cRBsOU51w+8+1j
      JJsjNGWbWDTnszTrobQKiFcEzbT6m2xeGJOkYhE6W7KMTM8H/o+opHLUdU2ogz0rNzvc5VBj
      SDKZOINLkySjBlJCMpm8ZCJ4seH7PsdHSvR1xRH4YdRb4ria/Udneeip03zrsZOMTiwEvkyl
      n7+oe4hRFai/9CFe5Lf1zRoaAYSaH6WrZlVNaIsQ9jcDjF3h+j4yNGUqP7akoCPhoDQIrTFk
      kOVZcU7rnbZwNsFEFGgZ4Pda62pja02YNhBqDNtxsZTCUQYIk2LR5lf+4gDad8mkk8zOFYnG
      IqQTkpsv7+TgeJ7TOZOb+j1es7aJYyNT5GyLoq158vlhDMMgGo1iSc2NVy3l1lUJJmbzfHOP
      y3g+T3NE8aGrezCkg9YSIRSruyLEIgba9zk8bZFMpVmeSdDbGqE9HuTbu47HVD7CJx+aZfuh
      GYSQJOMmVtTANiIkMhbXrm8mFY+z5dgwY3Nd3L48wvoONwjnA1r7RKXNOy/TtCa7aG1O8P1n
      9jG3UMbDAnyEVlQ6xtXHI2vEr8PvBNIQLO3v4hff2EMyLhhckq4do0Vog7xyH0BKge3CM3sW
      uGqlya7DZfYfnePbjx9j3+FximUXrQMNTzXXP6BaUcfML3+ca3pVvwnPH9QYhJZJBc5v0Jqq
      phGDM4UxLxNTa40SuvqMV2TQwqSSb1GV7kojRYCLV29OxbmvJCGFl1Ba43o6dNoCTeD5NV9f
      KV25s3i+4tEhzf93334MI4oUknwJbDvHQF8zHdkkuZLP326e5s71Taxpd4gbPnevVFhygIKt
      +OuHD5AvmSjpk3fySEPQlIzQn7HpT1vM6xTZ04q3r0wx0OSiQkjXkAZtMZeOXonWki37xzl+
      Zorfe+cGkkapujZBYAZG8Aj6FEG56LL9+SFMX3Ljqg7ufW0TpbLD3+7ro4UyX38+z+rXppHa
      RxoGUmpMqZHS502XaSJmBsu6nFyuwBNbD5ArgNKCWvvIupteNQ0IiBsDKX0Wd1r0tCoOnnbJ
      lww6Wkpk0skfKwIqhKClKcrH/ucWMknBxIzNvqEJKuCmqLSw0Re28y927nND4Y3fvxy4M9C6
      Zi0+psNExGrelgBhIqSJKWQQ5SW8mKcVwq8UsQTTM2TFGQmkekU110+9shZdkVI66NBshFF/
      PzB4g8BSzYPAV5qreiSfetdKnhtaYL7o0tnUQX9HjKuXGIzlPO7f4zKRc7m2p0TS8hFITKm5
      e5WLEJI1XWs4MOXRkTRZ2R7hzKyDB5j4mKbE9102dkW5vNNHa4kfPH0bXxFGcQMtuKYnRURq
      Dp2a5ffuSDUQo4HiV1+dZdfRCebyLtozyM85CAmvXp0lYggKrmLHwSk6LJfDY0X2TWbY0K7w
      /cAf0L5CGj7KK7Oxx8KSccbmDHoyK/iHRw+StwVae4g6e7faNqSBRgTRiMGmNe2MTgtMEWNZ
      t0chP0smnawc8opGhexyeY+PfuJZ9hyYwFFeEGFHhve6ku5cE26iSgy1cESQPxZ8oM++RqNy
      q74H0GnjXC4+YR0kD8rA/G4oMRCVGpZgLlpKhGEihIFZCfPryhF1JzTCyG0VBQhNpMD8qaik
      2mKr0kqp6pPbfaWQhgi1Y7XzS7g7wTVbYh43LpHcsCRZzWsPiE/RkRCYVppnzyQYms4FRIxC
      hpAgwOUdPld0SdA+QpTpTYKUtZ31tGB4RuOHqrqGsFScPEBIXtUvefMNvSTiFhFZH5wKYLo1
      HZrrV7fx4HNjIDUCG1SKiVmH+ZLJ3knJvoOjPJ0vgYjw7LECV3ZY+Crog2ooA9/2iJuCxR1N
      dDUrikXNY4kW9gwP8MKhEfIlhRc2/hK6Po/eCJW8j0LTlomxbhl0twRJflLq0ITSIZz741ED
      3/zBGX647Vho5vxf1t47TrPsrO/8nnPuvW+ot3J1VXf1dA7TMz1RE5UDQoFBRkKAsRbYhQ8s
      9nrX2B+MvbZ3P4yxwYt3MXi9C7tCK8AgMBYWlkcojsJokiaHntA5VXdVV45vve97wzn7xznn
      3vu+VT0zWvZKNd391nvvPeF5nvN7cmozAvPf6txg4bO18EppiZrKUGWLtabgH4fjDYXBv/TL
      N7uEw/q+d9229wlQAiHC3JAT9FYlK4hT5FxbHrDu0dhzm73jWm1ASdmlAGltcju2cc+U0uFG
      4XFtYWeWPhrS/fvgUIeFVsiljQa371wqTMtdIsS+rPyZlIIs1Xxkf8b8RB9CxI44PD60o9SA
      0QYpUn72naMMVlKUyNxGuO8aw0YScGm+Y5nf2sQwZHz262f56rN1ZuY3We+kSBT9jT7GBqtU
      q5LWZgLaECcaKQXpWhMhIvoaAzT6GrSyJj907yQTOxqcvrDAa2ennSBIHEG4UYoAYQKQhsGB
      OuPDIUrZLopCSGr12v9n3L8d1NhsZ3zpO5cKKFguW9hFLsW9bxSN2WuxMU5q54GY17nvrYxd
      XJfooTgOfDhJMQaf6dI70tyM5WV8Yfos7LO59m0891ozqS6dDEJYfB0n0I4zsqx4ooZCUfZM
      55iJ/J2CqtIMVxN21K1FpjxxKVVpUYvFd/yDNlBXCQcG2ghT7jRl3P9FzkzawK56h7qylg5t
      4OxyxHJb0ckUv/7lZU5e9LV/bBCdECmbTcOZqSYbbfc8Kbn/eINPHssQQhIj0FKQaRta3UlS
      rs0vsba+SqYzPnKoxURD8+5jQ/z9jx/ipgMDCAlaKpcTkE8YXGnGM+cX+Y3PXmV+xVgVTyma
      zc086fz7hc4eHxeJ9oaHHpnlu09fcqvls9u2Xn79ywnub/S9bmfaX7+IQNkyeZ1vUOQYdGc9
      Bl5g+oF1qSTCVnfQjkJ6sagxvnCWfYh3evkXZEYQxzp3AtriUvaYi9PMPg+cCdBgjLU1K3xr
      Gzd4A7eMtjmzUs3tI8KdeUniCukaZRUxLwmk6+yiFGQlT2s+R5955OBfLiQk3z4n+M5ry3zy
      nhHqFcOzV0O+9Nws331pulua5OeHj5jVoCR33jLKr3xwCKnbdDqCJNFIFSKNDWX4/JlRQpHx
      cbVKox8SLfjgUclyy/D8dICWyuJrb83xQkaY/HMZSH70B8aYGK0ghSDubJJoG+ukIpXDu62E
      0H35EyaOYzY2E2pVQZzEXJ3P+F8/+0zugXVLZ5/So5zaU9sDNDh+aIRWS3Npegm0QBBgo61s
      5sYP3LOT6flVphczVprrLuTd4EN9SueBwzXiDYjbMZJxkcc6c/lEpaINjtGsYO9eg6CsdEhl
      4+19O7LMYX/hF2rr6uF8XKXBWNuxcdUAlJJoIdCZIUm0sw4JAl+RyItqI0Do4lk5riwefnCg
      5aBUwaiyNCmfoWWM9RwLIZzfwSth9Jx2ljFSY30T9hPN23YrHnpO81tfXuD2G3dzYWaRE+fs
      ZuLrHfnhm8BWPjACrVLGRxv86g/tYrzWolatEQYB7XgT0hQpBZupYFQu87vfuEza3stt+2KG
      +hS3ToZcmNY89OwMZy4vYvOI00IIUDAuWPTdV6swOjpOGAS0Wk0EEJY62byly+l+Z68kTM+t
      cd+tw3zhmzP81h88z/R8E2/uzqvUmW6YYhyc9YD4wMQw99x4Ax+4Y4h//acvMzXbpL9muPXw
      JJ1UEMmYj93bz2DfEJ/77iZf+56tBCiEBpm6pnjlk0LkP4Xe6WmtDJ3s17a1GjnYsx08DLo+
      KikjQJ7qx3U4X3jtOr/ZKcrKWwk8rvc5BFZSIKwCW7Z2GyytS5f04l/r/RL+hMkn7pR3+xzA
      GDJjTxvhpGZhsSqGV7YsGGNoZ5Ivngw5NLDJHTcEKDJW21ALNT9w925ePjvPjuER1pqXnAQu
      bT4C4Uy6SQiKiIXFNb5+eoNfuMv2T261YyKXqmiMZqZZ5ZWFkMXlNn/8FLsllgAAIABJREFU
      rcv87EeP8vGbO5xZqLDaFpy/ukaWKncqFtDOS2JDhkDR7qR86dFZjh9uUK9VUEpRq9WtRCpQ
      5HWuQqKn2ju7mjRbml/+38/w7e++yvKaDSkv00y33b33iYpQGu68eRcfv7+PSG7yw2/fzRce
      Oc/PP3CA+25scGkx4OjYBrXQZnet3z/EM69Ps7wag/Gh8luvt4yQ8pO8+ynFOm691C9+4L4H
      18QGYw2roAkgcOLZyxwpJYH0OZqO4HIluVicXGHzvwPSzFqAlLKfBYHIfRRep+idhVeCi0oH
      XipslQDecuDj5e34hEdOOQF1KV8Up1Yo4dCo4Le/MoOWFSaHIn7zS9f4xP2TKGV46uQKJy/N
      sdFKXJujMnUZlNTcfGw39X0jDB3fzeT4AEcm6hweMlSlKek8gJAMRBmxiXju3DLTCy1kFHHL
      nj5enxV85htnuTC9SqeTuPmp0vp4KOLKzQOzix2O7t/BjoEOGxsbhFFk6/R4RXTLdpeZF5IM
      PvulNf63PzzB1x49wzOvzPHU8xfYaHVK8sLkxgh/Z9nQ4LE/QjMxWue+m3fy3Kkl1luGRj3i
      ncdH+MDNMNQn2DmQEZA6g4Ng7xjcengH33ppljgBhM5N8r00IUrm1uvqGcL/R3SHj7hU3mLm
      xf4HBUG42inuuYEKEDK0cEbbxgVKWSbwJbGt8qrROnPStkhWlkKQOolsowG0w/w22d2bMAU9
      eaKQS27hmMBycCERy3EhFvcZd/g4xpPCBRjabbRmSMcgwmNrb10R1FTKv/ixG5heV1xeE5ye
      brJjuM69Y4ojo4Lf+8Yss0sr2EJO5QUX7J1o8BufGCMKDMtxwFilxlitw/DgAFmWsrbeIcsM
      SgmkgFDA3bva3HpkN1fmT/LESxfZP97PzbsjXjt3jc1OuT6+Oz3zSEpLfEJaJphZWOezXzzL
      244cZG5V0Ojv0N/o500vA3GiuTAT8+izF/jW46/n/gZLQCoXNiLNivUWPkfEFh8zJUIUwLWF
      TX7vL16gv1/wsw/cxr03SMYbmkBAlmQEoUuRFA6vGxgbqNLfV2djo4UxyobK58zmQ0RcOHyv
      CZWSQHTCUOYGnCJOaPsjRCClJnB2LIQQ1nzpIIsNf5CEYYR2lgEf2yOVRLmQCKEhigKSNLW5
      BMLDHsdEUVZYk8omMidieo88vwldRO4I1RRU3yXecqlvQVOO9W0QocVE2ilqOKYsgXgEMBCm
      9I8kvDqraLZjIhEzFEqODMf8xifH+e1+xVefmWOllebvlRj+zkf2sm8wASPYUelwbrVuK1i0
      OlSiEK0Nqc5QLqRbAMM1w8/c32CocTtffep1PvvlZ9mzcyftuDhBu6h1yxrZhRNG8drZZa7M
      pVyeD8lIGBk2SPXmAGh53fCvPnOGrz9yIjc/lzFibpLOW1IVdXXENgq2haua97xtP3vHa7z7
      qGD/SEyoQqKoThAGtDsxMgzQaYqUhiTTvDrVYXFlM3+Hn5/N/Ta24HJh8+4ysnjilyVpXwRR
      dv+7G+obQDE20mfbchggzTLiNLGhDqWXZaknYBeDknvaygheECjl8Hq+S1jHFAjhrQSlDXR3
      +rInXgX1A5TO1JpXaeyCP9shRftZpjOSzJobc1iUK1LO7FrWXLTOP+ukgn/39RlUELJrAOJO
      G4CqSvnHHx3m73/8oJWCphjt/LomThULrZA/eyni1Lzgr84NcWpOsb7eQinB2Eg/1UqQb5QQ
      cMuOFr/0/j5+5D13EBBxZXopNydv2avemfrkEKcDXZoLePkCBCKhE8fbrM3Wq1EXHDu0A5MV
      YSzlfS+YQgMZPm9h61hKa2kEjz53mc/91Un+6JuLTK+FhJWIVKesb2yQJJqRkTH27t3PyNgE
      V1Yi/u3nTxF3/GrqnPelLCfS4GC12Jb4t4ND5dyFrYto7VWTO8KiOrTH2yYrW360swphMVVm
      k1PsSeGrHxsSd0JIIcl0aqVvmT28FcFYZihL+a5FdAJICK/A2g+9r0A55XoLujUGpMBoLy0s
      1DGmUNzTNLMnl2/CUEK555Yr9Ffg26fbPHNmkR1DIesdGBmKEDLjxLRmpCE5PBlx25FdnLw4
      RyexXtc/+NYVHn61j1YKl6eXSdKUidF+rt55gL9zv6IepnTaHTdu50HX9s/RmubIZD+H9+7g
      9EUbhm1rZnr9yx7/BQRx09WZlcJCstFs8dypJj/2/gHGBrWtsPcWrpfPxLz06kW0Sen262gw
      DvYaSwNd3tucltxJYMCWmXQVMoSmUlNcntsgUCM0NzfcXtu1XlxcoNI3zL/83Bm+/fwsc0tt
      vDe5l5Bz306J94SHgQKPre0QRKkmkpB0N1a0jGT1Y4GQgvGxiH/243sI8jpcJVNXQZgl5da1
      t0xNhpbaQSbbDzbLUpRUZM4O7x1hOa4s0fe2BJz/TqCxfVZ8WIXB5JYgrUs1w7w0MMaeRsZa
      0Mqx6ghcjy1bbc5rv955N9eKGK6m/N/fXuHFM7OsbMRUa3V+/aeO0IkTkFUIAj79rWlWNgW/
      9pOTfOEfHOHv/XGVLz9xEaED0thwZa7F/PKmHQuGqZkVHmqeYvfQrdyzR3NkuIOUNqT66pph
      zxC2mkQW87ZdEa8e38elmWVacRvfHw1seqWkFGRmnNnXGDBW70oSwYlTV/nlT41TrYauONZW
      00LvddexkMnxCsalWdql1Gidgk677u9Vqj0C8rZ3XGyVL2BQCSMmRwb59FfmeeCeQW7fq1BK
      0YpTvvnqBl9+6hKPvnDNsrfJ0HmYfYFxi38LfBdcr7OJvElh1yBxiqCjC+/BB1+RRBhNf3/E
      4GDE++7cRSCFc4SViD6/B28B8A93kEhnSBkgcDFC2AoS2kteylCnWyn24MMrur7uk8hPA5NL
      I4TT5N3nHj93aeoOmllisT+2hCEOttljtZiaKXWrESy2FH/2XMxjL18hTm3TvSTr8C//4gJ9
      UcDn/+Ft/Pp/ucR3Xp4ly2J++t/M8t5bdvPIc5cBw8hwxAfvmKCdpjxzyjC9uOEqaytW1mL+
      5Fvn2Xz3AQ7dZcuCNCrw0EsbNAbH+LFbMyZqHVY3U2qVij2Z/Ano99qfo9vgILteGZiA05eW
      uTAdc/OhiCRxRQXYDk7Z58wstHnk2RW+8cRla6Ezmf9CHtLsJfL17O5ddGLsaeC/u95s89Xv
      nSEj4hvPLfKu46O885YhTl9t8kdfv4xIvW5WTnza5hJWPAuUM2z0wLASbYoy8VPQq1WCDSAJ
      I7j/jr3cfHCMXQOaF6c6qF98/70PrrDBSN0rugV9eRt6PsYculgtUjpLjo39sZfPHDL5sLo1
      VyFABTZWSAgKvaHnnX4/PEUIXDaaVwBFAWWMsVYNW8XOh1sL8qAwIVzIURHfaYAdfZrXrnZ4
      +tQyYJDGdpBZ2kiIU825+Zj//Og0QgkadQDJ8+cW6BiNMLZg1tBgle+8NMPyhleOBT4RfK3Z
      ZEdDsG/XMMPVhEDBLTf089WX13n8vKbRqNGoCH7/r84wvxQjyFCu6yR4q0dBZMWfDr4ZGwYR
      J5rpRcM7bh1gaLBuc6jFVgYA19srbvFvP3eGF16ZcqV2Sn16jclnURCaXc8iTKU4ZXJyFIVD
      0hiN0AIjMjpxytnLazz8/CwvnV0GnYJJMcRuH5zfokdHLEzWxeljvPArVy7M/17WBQQeelua
      0ASB4KZD4xzev5dP3L7BwbE2Rycy1C++794HV8UaI31pF3P16rPbcqnjFiklgcOeUkpbE8hT
      GaaboXIYYoPVVKD8RyUzHBgjbZUIB1mCQBK4k0YpP9kiEtEyY7e0yrR2pUS7mQzgkct1Pv3o
      El99fo5W3HMEC4jjjFNTa2ht+O8/toff+NSNrHUEL11cwQChgVQIlpspRqc2tFpIGn1VRoca
      bLQ2MUjOXV1HNSY4cTVhrBGwq5HyzsN1nji9wu9//SK6MsKJc9fYbLctjnbEL7TVMYTPh6X4
      wVlFDLhYd8n0/AbvuHMPN+4fdHb57RlgabXFP//0Jb787VdIk1LBqRLQLqAqJYawgsSW8i8T
      XukHY/WB/NQ23Qzl/y2KBuM2CUvmIzUlWhGAEsJ58oUNaxHK9arwGN+ORWOhsK8vaqQCKTFS
      0F+r8I67j/Cu2/Zw4044utMQSI1SEvW3P3DfgytmjeFakr+4KDpk5+E9u0IUDe/8EesXWaqi
      P5MxLhyibPb0xF9gma4rl9punbQNokeKUhGkrhPAPtf7FLqP6uL3whXNdSAXIQQX12r8ydNN
      Hn1mis22b9As8u8VViNBJTT8/If28/y5NX73y+cQacDoQMBH793Nmcur/MKHD/Dgj+/jhh01
      tJSEIuHDd4xQqyiuzDfJTMS5qQWeO73C6dmE/RP9NCqa9x8f5tHTTZ55/Ro3TIwwt7ROkWXn
      iUfnEn9bJdGA3ymtYXR0kFsPVuhvlBLjexghTuAP/vM5Lk7Nl06Tbogl8Cds8d58D90JsJ13
      dUtkcfmxophH17t6GmOXfytRKGW4/ZY9xB1DK057nl96X6lubcGghnpF8M67buQdN4/zriMJ
      d+7TRA6BaK0JgiBEZD77SxSKRj4ha12RSmK0KcKhHW4PgoAgCIg7nXwwQlqLAN6c5ickC2uD
      3V/7PCNKDi/sEWqZzpTmaaxE9+9wn/u8A6kk3l6c27S7ThSrrzQTxZ8/3+bZVy6RaO/qv37p
      pjiR/L1Pv0S7DVmmQCbcfeNuPnjHMH/5xCVuGJbsrLf4ybsqfPJtE7RTyUDV0EqHefCLdb7+
      7BWasQQSnjnV5ufOLjIxWueBu3dw/OAEV+YvcOLMFdiWoAqS2I7YRG7my0DD5x56lYnRAX7h
      4xEDA/1uP/MlAGCgETI5FpWetFUabfG2ux+zzR1lPaHMND1PBDJHWhaPF78pAhW30XQYaDSY
      HB/n1ZMzbjuFS6s1OXy2RK+c8CLXNZWBu48f5L23jXJ8ssO+8QiymE6nTRgFls6qtZozbQbW
      sqNUQWROMfMkrAJlnVuOuLSxZtI4jtFGk6QJcRK7JPpcDHcpvoXMKv6bZXazlVKoQOYhGf4L
      3oTqF9fnMWfaOux6V66wFZf1R7s0l5fhOy9O0WxlIFK6urlvc2lgrWWItQERowl46dwKn/nG
      FJkJ+MYra6SZXaNAaPpDm9FVVwm//OEx7r150sY4mQiQtDO4uNDkd79ymS8+eoYP37uf8dFB
      Z7myzacLyawLAe1xYs7krliUMc5yk9FpJzz50jXWNjbpOIEERSIKQDtOef3CkoUMRmOMW3z3
      Dk9A2pcjdIehwcMTUfop6Sb2rtJgHawymfsxpfeYHNaxLcPY52o0S6tNzl6cJ0ltdyDfQdOz
      Di65vaxDYPzpCGODFe7b32HPWIXICWttDJ22qzjdV+9jcHCYHTsmqFSq+AAzO9VuqZSlKcZY
      W7OSFvNnWUqaJmSZzUzKtCFzfoF8wpT/aT8zbi218T1hwXZpTHscaqVZ5cjAuFyC0ppqUwSO
      uj9FiXkFNjX6z55aZXGp7Ux/sryX215dIRgiQAjDteUWz55aRpCx0mwD3gxr35ZmGWmWMV5P
      ed9NDSZHKjRqoJQ9waQ2SJ2xsZHw0OMn2dhs98ART0Dd+NnoUmiEyf2z4JhApx2eeO48//qP
      rrDejDHAwnKTubk5F6FrOHt5g1MX55ww0i6LrHiHJ/yyFbKAPtDNAOWF8xzkfjzx+3mY8l0l
      Xaast5WemDtcgQtXXPFmx7T5w6TDyN7S4x7gh6uUIqzUuLxoeGVK8/CJxAprrcl0RpZlBN5j
      OjA4RLVWY25+lrjTds4W607QBrLMO2QMNinDcmmWFTUfcvlhBAXpleboJEhuDHVJxz5OxncQ
      yYnXQYA8IjJ/mOWcwoTmzGWCPJDOE5T0yf0CVtuKZ05ZJfavU0bcC4XBgTq3Hdppw6ndUe5J
      1mP5v3VXxEeP38hTVxS//7UpzkzNQKbcTATLaylR5OfrSaA7+LyAFVslZQE7NOiYdkfylUfO
      smO4ztJ6mysLMb/6sxMMDWeITHP2cpNOJ82ZqIC67j0URguL/+WW9xU60hucnttI9eus5tbn
      98C9dicurIu5TmLha72uqIQ1llc36bkNY6Aewd5RyWA9RQvbw8H6O+z4ZK1WI9GK9RZcXVWM
      jIwSVSquZ5jMFdDyMaW8m5qifLmVzNpJwuLIzXVfsDZyh/WlkK7UCtho4bK3s3wsluq9GEOe
      HOGVHURR0QJc0VxrGfHWBR8g9fDrMYurHYQo4nn+OtfaRsxjJ6b9kC00c6EVxS5oBisJR0Y6
      XJtb5T137GZy5xBaCoRMGagFHD+82wla24Gn+9qekMqEkhOllmRZytLKGr/3p8/wx198made
      OMtffKvJ4tIqi6st/vyrF+jusu1gpfa6XXFZKVx6Z+m3ZSbRWtvTyTWkM/r6/Xy3zqMIZyiH
      OfTqEuV8Yv99pQQ/+PY7r7tGOstYXNecmQt48bIkUhatWFFiT+3gO8sxe+ZanLgaMx8E/MDd
      EUJIwiiiEkUkSYLO2nnebK4nU2JyUSxOwSwix465ZcPLcGNbH/lTLJfipuQIK1/Gy/2SdMzf
      LXICLDOqKR7rhig4N7eJFtbeb0q/e6tXvgFOEUszzezyKhdW9nBoSHeNtZcJrm3UQKS8fG6T
      9Y0VEBJDwN3HRrjtxnFeOTtNlnUQOkK7NFL7pKxr7a5/OWbINFnWoZ1lCBnQ3DB87fErDPRV
      CKI+rlxbs/vihbcQCFnC5qW5+nWz1F5AEvt7DSa97ti64+VMvtbGt3/KR91jgNA9z5LduoaU
      fq7W9L620WJtvd19j/G0KLg2v8zJawN86h0SxYatxueEaaoFwR8+/ipq8SomCvihG/fy2umQ
      w3vrJGnKmatVdCfmhnGNSWNkIC2+FxZf6aQcWFaS+FvQRfekCuJz2Fn3OHy8hHd/xdgcAuOq
      K3iY4JkuN2GWac7l1xX6hGFpw8XSG5ObaL+fy8ONXTtHmZlbgkwwOtCg6iOqjFXMjCvUhItS
      NUZzZKRDva6YWdxAIQGFUimfuG+CGycVX3lyiDNTixgZg7E90ryD9i0xquj6wzWVsPM/c2GG
      3/rDa/Q3+phfWkPrNMfhwuiuZxSxVKJY19KTC0HnCN/0Jhn6yxT74QWhPfsLRipBr/KfhROs
      TPjeUul7VBviJOXJF07llsmtOomg00kZrGXEcYcwSElLwZ0vzzQI2p2Ux167ghSGtNXhiNrH
      WVkjajTon17mRdnHxM4QJeexQfYin3QQKKdc+S4n5OaybvxeDKl7iZwRrHT0SSny+BQjcIFj
      7lSQsjD94TfHlFe465jGPcO/eLQhQWTW8mGbpW67dW90CSG4Nr9ClmlCZfjQHeNMNlz1BuEm
      nhOScP107HsO7h3n2tIURiuQmsH+gPHBiL0DCe972x4uTC+TZKLwcWx3Gr7Vy9jTQ6eAzNjI
      AjZbq+DqDvmwAtvFcSvOL55DsdQU+9RF4Nu+v1ROx0ls4Zuu+D0Rnpyu9yDHNt43ZWy7LCVT
      7r/jKCdOX2F9o4Otpr11LwWSzc2EqUWDIrEdf9y820nA6ZkUte/Q4Qenpq4gjeLi/DrfubrC
      bWMTLK0ozsWCqtYMpyHBkMKkrRxW6BJnemkhpXAeYdPFzaX5+hXuGmY3piEPsZBCEChJFAQI
      NF4G5PZf/9yShMkhkntPOcaobSq0tKKTJTRbvt6845K3xAtWavqgvMP7xvhHHx2iqmxkrHFv
      92ZiIYp4qdcWq+wcHcTolKm5VRp9kh9+x4185EZNNVRMDitemcmYWWi7uVmcks/GE8kWRa+b
      eMqE4NcRY5yhxLZ3tRi9UIK7IEnJkYQQeUJ5DmNLDi3RxQHG/d8zR9HMwnYcCopnbruyfvVK
      v3VeXekTkSQoqRkZjDi8bzevnb1aMhzQQ1d2sTZaTT729gkOjaWuUR/MrQf82n+c5+tPnUXt
      P3DkwUsXL9u5Scl6O+Hswjr37mxwupXRNIJBJLMrsH9vRJrazuBaZ7kmLt2fQgjCMKQSVZzd
      tiCGroWiUGaU8lahQvJJF9qspERnTlJtgYY2rscSQFlZK8sqnHJpI1cPjko+eksVWe3nyddX
      Lf4U7jR4KwxgQOUHj7W8HNg1wP4Rnw5aUkp9YWj33IFqxrGRFrfuHWCqVeXj94zx03crapFE
      CsFmKmnLBi+cmiHTwiXaZ4Ui40sPvsk4cwZwhCZEMQbj1tFQOBR7icYjf3IIJHOfUH5i0Ev8
      pbtz3cGJPCkd8SvyyOLuEeNFma8ia83OCqkUQZAwORxxYGKY8YEa/+iDh/nRG4f49uvTXF3c
      dIvsE8FLONC9SxvBUMNw7Iaqa44i+DdfnOOx5+dJU9co+/LUFWcaspNb2ejw/NI67zmwk4VW
      m7lMIrSib7DKSD2l4xJFhPB419bZ9JaEaqVia+Nrsy0TdJm6HMwBCu1fk4t1+10vzbyiLHNd
      yZiSDpAvXu+JY/9wkcLUKxEPvbBMkoAQBXx780vkRC2Vod1OeeLkMjtGhzg6LvOFF6IUuOee
      G0jL+I0o4+bd/dy/15aNFLh4GDSbusJiC2bmViyJiVIugI+xeQu6SxlSlv/umRau/5iylQVw
      pQZFfv8b457ine4Mt3V4pIWbW0I53LvsfWW/h40wDoMqkpSPv/dOpuaWedexXTywK+E/ndnk
      yyfmHUYOybHANs83xnD6UpNXr6ZsJgGf+foST748D9LR7f5DRx+cmrrqUt/Aexc3Oi0mhhrs
      GBqkGre4kEomspCd49rlASi0zvKuiT5+P01tWXCpFGnWa1ozuY7gL+2JPf9mwcnGlN3ddqFy
      I4Ew+efaOYlyB14PPZdNsVII+iLDYxdazK9sIsq/RNBjvqCXMwQSqawPIE0z4lRwaTnhY3cO
      WSLPBXCPZDUeIsBgJc3no1xSRyg1O/sSkupOXjo7S6eT2cAzUyiagvyQecOrbB7NPzPlld0y
      re57uyCRLJTR6yq83fO0DOAS0X2Ta7n1zjzyIEcUxeCkkMhQMjE+Qq1eZXykn584INnUgjio
      8oHD/dyxf4jnLi+ifWW5bQZnWUMwu9jie68vMbNgYfzxg3UO7h7BWeDBuEoD9hkZJtE8e3mW
      HSLjQitmZWWRSifh3EKFwYEhwiC0nmNTeO28TTdOUq8LFgOR2Kyt0uRFfrzTpQcIjAulsPVv
      tDGkWeacF2WLgU/gwR55/lQAhJI5ovTv1MaQOUX7zpvH+NmP3sA/+YlDHNpboVYDhMbgQxHK
      qYDFahppn9lqxdRrVfrqEQvLMZdWQzseXSi9XhnW3hiQj1HmwjRzipnWBiU0x0eb3DA+iCRA
      mgCEwkjsj+oO+rveVbaj5+EjGEoaxVu4JNbi4vC8P4GchcOqAu5z/OlS5BBoN2Zv5Szb9TU2
      h8ZIayTQJQTgn68xJGmCVIZL0/P0DwywbkL2hi0e2NHkI5MZIxXjhOwbzEq4N4oMYQIafYp3
      37WLn/vAMfaMVYqUSEtDJWu+EVyaXubE1QXCwX4ODzT4XtNw6KrhhmFDJCTaZDZbH2emKuGS
      1JlLvcNVSu+wcuMSRQiE7f3aLbG8act0UbXo+p2jsALPUiih+ZtEcbu912DI+IU7Q6ouhPtD
      Rw9wdknwO1+b4sS5DYTxqZfZFqkigGqkuPHgbq5em2Vlo4XJBBttqwjbeZZNsLmx1jFB5nGb
      s5LIwgxsYKUTsGvXBCfPLTnlVUEP6W4XGdp7bYnMLE/gOldhsSl92SnNvRGYtvlH8a5yrSBh
      Q3jtCWDklkeWx6W1xmTOMpd7512pGyNYW2+zQcZGc5NrSY2bKzYdt20Unz+xiNEBNsOmnAJZ
      XgiBMAqwRZXvuXk/dx6Z5JaxZf74iZY7AbZIFYFBE8cZX319msXNmKlUsNxus7qecu2lmKvL
      /YRRzW2kTZ7XuQRwoRMulks6xVYpCANJEICQBWTZAt+EO/n9gonCwpJD0a6Nc3NwRGQcJMIx
      tI+P9xJZoKkGhZWiHqbcNpHw23/zBm47NIBQLdzIexbT0m8g4eZDu7jjpkNUopC+vgqh4xlr
      FiaHO8V4C3xb/NOeftq4jDajSTJQ0hBGPoSjUCItg10/crV7TcS2P292T0GgRUhJlynb+HCJ
      bvN1+RnS5+Qa5f4svdfQpWOYzOYkFPkOdo3czrG8tkmcGDppgjAZq1oRI/nibJXXriy6texl
      3C0zs08Vhlt2Sj65f4FGkPGRO25AHTh844OXLl/pUUx9HL3t4rLWbDM02OCWqmYqlTS1YmKt
      g9hRg2QdIQRRGJGmSb7x+SIaH1hlE1mMyQjCIC+wpbPugZaGgFdly3CqF1oV1gqvCLmNzBVG
      B5G2wa9F7I69pxoY7jk0QKWvn2srHZqbad6o2loobKRsGML42AivnZlmeXWDWw6M8lP31ZAO
      uuUWS9FNsNIVF9O93k6/SUKwu9GmXmswsxEwt7hO5k4Hmwzu464KvSWPzPHex16B/xaU5p4b
      sFY1D009xPCZgMV7tjPBFsTtlGd/ApaH4SxkVlBl+FL4/v0Ga3WSTpfQxnDLkT00RY3hMENJ
      qCvD2EAfL19dRWuVL+F2y+rrtyIMdxwa4d7dmlcWK/zRUzOo/QePPjh15WrPYpkc5wkj2Oxk
      TOwYZM9QgxUjUVJSzxJqIyk1FdvSIr6tfemoFn493ToaYzu12+C6wnZeiPrSHpRmJK4j9DzN
      F38pQ6HS1SPFRM+OePlhBPRHhrv3BHzw1mFWs4BGLWRwoEqlKths2dr8qU65dGWetfUNJkcj
      fu3H9zFaTx1piPwd3ZLTf+ajGo3Tm2R+ekmnF002OlAb5sL8Jq1WikVUCinCYuwuZsizp/eR
      lIng+yV+b/bMi4bjozb9JEqLtd29+VyNtW6UfBfd669B+6hWHzVanEBShkgVUI0Eu3b0MzJY
      odlq0Y5bHB/KOFhLGI9Sbh2L+N6sZm41Bm/N235m4CgzrCvee2h1aYdPAAAgAElEQVSAU6u2
      TW6uA3QvVi7CLOzQ8NLJ80yO3UXYWeflOCOcGGKfaOccr7coI7kl2D7HmFJUqdsscJvrEy5M
      7gPwCTJl4jY4fGmcHuCP1hLeLSdZK2mlrYvB81PC9BB/PuPcUiKY6NP8Tx8ZwBiItWS5HfAP
      P3eZ89ProAV7Joe4fV+N//odA+wa6GCMlVZgJb33OhZOJFsiMq+QJ7ZRaIVnIMOt4wm/8vED
      PH+pzeOvznL20gJZphAywCboGYyWYDQmS3vUfb8sb64rdL2+x0JXPh2vF41afk9vSIM7QpDS
      myrduNPUrbfZer+U1j8k4AfvPsQP3jTCpNhgZj3l955fRslxnlw13NiXMqJibp2s8cqlVa5L
      /LlwtfS03hGcWuvj5EKMNn0FA2x7r9YgDcbENDcEX/ru0wSyAjLh4M7b2dEvSGJrDs3FfXlT
      RSE0giAgTVPScqny/IA0Nq/BLYIR3pTWm+pocknqW6+WNwE3BJ8i6f9XVoo9HPLCMn+CJ77S
      Ogbu5AllRhoJNpPUVr8xtsv9f/fuEFt1QnRzkCkkvR+b1wM88UspSFNvkxf5SeB1iD2NFnv6
      DXftVNx3YB//xzciTpyewXQplQKdpVZqmy4suXUvr6cUUxC4ZdjCZFmUZPS7dX0Zu/XZZSaw
      MVg+bLuUPt/FpFJKCEL6+yrUqzA6GNFnYuqB5uiQoBKF/C+PX2Mo0vy7D4wgDHzqpj5m1kb5
      9mtziN7SlcXI7DiEZK3ZQpuEe3YZPvv4+ULL6w4/FXZTPQ43KYiU/+ZDx3jgnQcwGhabsLCu
      WWyHBGHUtcDCeXitWZTchhwFvpS490gCrheZVZIFKpAEgSAIvD7gmMEp+YVp0+N9S/D+5BZK
      2uVWKh+/fY/H5vamPGYJn1jj4ZhbrLK2LQRKaOp9FTIBCM3DL1zm6npomVYLMu1OfW3foZ1y
      48e7Reo7vOxzKhLXHNwrn8I7/rRmoJJwy+6ISqhQBoR2Odq4JttoDD0MYFygm85AZ7bvmDEu
      A6k71Ljr726NC7uTW6XtyiGWaMaUnm2hs10/methCcakWGuMRwQGZABBDRHWEEENISLuu+0o
      n/2pY/zMTYYdfRmdSsR/vCh4/cJVwqDCi+eW+fPpCkYIdtUy/tm7xhgaiPA+LJ9JZ9w6YWyN
      0SCMifUm823DfTtb/IuP7tx6AmyJyDN2IdI0odVJODDWR6udMLu4xmNTO+lkkh883Gagomm3
      Wl5d8mXec9tulmlQkiiyynKeBea4UxuNFAq0zdbX2hAEIndyZJmFR7bupbXySOklF7lSbRx0
      sjkBfh7eV2AZrgxr87+XbNQ5zHVrIIBqoNm7q8LlKylKVNlsJ2x0tM19cFDHuLu1q9Tg51fy
      h1ty1abLvtRV29KNzCcgBYFi30Cbd944yLHJBn/wzRkuXV3NmVoo20fA5KZb3Hu7k12gZLXp
      2ev8HiGct7kbwuR9295I/BfIs8TkBWPkuoQgzxuRSqGCCJN3bTEYUiQZNWUYjBIGwsQCiyym
      3VLMLS0R1TJqxp98llnv2DfGIy/NAQojWhaOyoxGv2TXxAiTQ1U+cPMwGYa3jyfMt6vs7OtY
      T/DlqatbFqI0L5vkrjVzGwl3Ht3Dc6fmuDq3iKj2s3c04tg4RAp0VuSzlkupGwNBGBBFFUvE
      wieylFquulZAVvt3EhOb7C6wWWP2e/ZUUYF0ifC+Xr2FX55hy3E5ns2Egzmyq4dZkeHkrUeF
      P8TvuiHJBMuM8s4bh3h5ag2J5m0Hh9g/LHJiL9oZFbZ//x7v+Mv1nZ6kofJ6d++DHc9kI2Xv
      sOGZKcPUtXUnqWWuX/XahwuYUXySv8MvxhtduS13e9y/3dX9xNJJJwTeaYZ2zf+ksp0aZdAz
      tpD19Sb94xMcHUhRrpTmlXXJ46cXeM/tB/jV9+zi6ICgJm0GYZ/KWBchS3HCcrOF1hJhJEGk
      ece9h/gHR/p5YMTQ2FHhvp1t6qGhLmMQXt3vmWNXRo7BSVvJ1ZlFvvXCOfbfME67Dd99+nXO
      LhgePlvhhdk+UiLrwvb4t3SapGlmlUNbQIcoDKhWKkWV8i0bIMDBJenglFJFlpqtKuYKdDn8
      bKxy4DA2JT+DO5cMOdbN8U/p5dr4tO6tA6oouH0i5uzaKirQrDU7vHi5mcOEsmfaM6LXcTzm
      z3V6xyRd3mxHQcJLTTzvFTi5k0liE2wZn5SWkEThmcr3sbi8kUIXzJKvAflnxjumsgyTueyu
      HrjURR/lLev5sd93IchZan98vSMBQhTEXzxLE0SGHTXBpla5ADuzmGC04oUL16hIzXBQRCYL
      BB/drfjDH9rJu46NILBdIPvrIW8fG2BOh1yjznA1QbpoVm/mlT5G5A0vtzjCSJ586SKR6/XV
      6gi+8t0XOLMIay1NFjSoVqtWcntJL/zGGjaaG3kzvGq9TrVSIVDKLoi03/GYxMvlwLXfyaVh
      TlDWWiCUPRWCUBJ4rdUeAb52anEU55fY9u+eNq0+UD7TAWE4NtChXyrSdINDu0dZ22h2Mbk1
      k5ekmRsHjul8+cbc7OkGmIdx+1LZ+MhYXNNnS0hVlTJUcwYAnJQXAoRCqMilS5W9G+XLhgMg
      bDd6YWzwi3TVU6XTKHxZ2dyv2mW+7HaodSm9IpdZIJ0/wBik1gidok3mNIsMjERo4cIpDMY4
      T7DRVAPJJ955nPeMb9AfZLy4IPnNJ9s8/Mo84yM1/uZtI4yHca5E2zEaGipjXUtm1mKMSEGm
      fOjoBPerJkdECyT0hUUUrBemb2gF6lo+rS100JLnXj6LESFChqyuJMxcm2H4wBBjNQjDBlIK
      2u2WlVzS4kpvnUyzFGkkzWaTKAypVas0W7awrJDSwh8jXO5NgZsRIpfOxkl0ayp1pRaNIYld
      XUynB/hYfDyB5ady8YxuJNBF8fkf/mMl4W/fW+fq/BgCw4fetgew3VSQdkO9B9o+zWtEBqOd
      rqO9F7WAQ14a+bkVY7KnRDMRrMYRj5yLWWklfkXsSHMGlCBtrRujZXemV8/lzznvbb3e1Q0D
      /V/LDP7G8KiIIu3+vsH2kFNOWfUKs5DWx3Jyep2vVWu8enWJLz07zeaGQMqUw/uGmW3Bs0uw
      q7+PG6I2IVYHbBnFZ64EnJltIYTkpqOj7N23n1Qs0hIhO/dDVekcMhoncN4SA3SF1/oJuINO
      qIDXL07x6uExxhopYwOKgXo/lUqVTrtFq91ysftu8lrnEqLdbuNd5xjtdAMv5W1ZPJwVKT8g
      S2Yz4w38zmwaBi7m3LjtddLUN7rGeIhRbO9WHF5Un/AG1PKlpOHvvm8SJSWNMHXowcEH9yCv
      l5T7JZfDOIQgZ16vqJZIGm/+NcbwxFTA7z88Q5wafvWTezg/Wy8U+p69MY4JIMstMdtBFW9d
      0yZF0N02tHwZv8bbnijf/5V76LH1iLRJkQQOnVl6ylLBd586zePPCTppavsiC8gQnLq0BIHg
      9okd1qojDLG2irAEDoawf7zOfXtH+fCefvrVChWtuSwaHKtukKUWzvm6U9KeAHZA3Vauktij
      +KtngNxtrVOMNPzwvTfRiTf5T68Nsm8wY3JA844DEWGU0e60rZSWduW1MegsIzYxURQRxzGB
      UqTeMuAoNU+yyd9WQIfcbuzqemvtIYXzMHv8YAqY4O819CidXjr1fK6NN+H6+fu5CyYbGUJY
      6ZX3VaBQfQ3dXVpyJgFnuHD3lPwa5farnh1emw/4nS9dZPpaxs8/sJsogBfOzGFXKaG3ZZOP
      0bEPdOZUbD0nUS6z3nXSZaWZeWLv+WYp1sau0zYMY3qTZMo01KsrGAQZIosRUqONrSSosSE4
      GWBLS9mWSb6a3NBgjV+6d4TdfYa/PLlKNapweVNwdW4VoTVn5jf47Q/vZ3dNsqolu2QTITQj
      aZvVtqA/MAVpGIPJTHeLpO2urik5osqJwRjSJOWrz5zn7370AHfvnmWmWeEbF/qJZMztkxBW
      KiSxbYXpD1vtlK0kSRBC5FW/MMJBCb+Yha0esCXEwVWek7njrAg/FgSu2C4GbFVt5XoJ54dA
      8ft8YnaBdWaQyiumvnuNsWY80bOZOUELFwLtt5YuJi2gVtkHAE9dFvzls2tMr7QZ6u9jfBAu
      za6yZ2iAwYZkpal5/uwCSysxo8OD/MjtNb58MqNaESAyG1Pk4ZV7bpdzUPhoU+HKzPfubxn+
      FaeUuzVfr3xC9JLx1qv8hm4nWunOMoTSKZk2IEOQBTN3FyywjNTfqPOu45P81hNXCahx8vIa
      QiYYUtABAQFH9zSYrGjGVUK/SHk9rjNIjDCaOAUR2MxA7YuBSWlTIqemrvRsmB/rVq4X+Zik
      gxmGldWEp84vUh/Zx327Oyysb/LcTIRAMFZrkxd59VYlfHh0KQtIYJVYB2d8rU9PrJ7gy5jZ
      Lk2R+pcvtvEpl1YE6kyjjSDV9tt5rqwTUv5eb20pe4TLcy/L+nzQXfClgDi5qRMPc/JDiflm
      hV/5kzOcvNxkaa0NJuUHb5/g4I4K33x5nqdPLnHuaotW247nA3ft4F2HI+rViHUzSL1RYXJi
      gNnFNUtAJUIzeXVmKFuQpNdQXZPArpit6wi/4nNR/JSYu/e+7n9pbKrill/ka21vstGuPqcE
      uT0ky9KMU1PLLK0YFlab1Otwy9Hd3Lt/hNnVdX7ynj3849vrDKkUidUvRoKUNROykFUxkWSs
      LyZ0iVwqCDAGrwMUCmL3YhaDtwiifKyXZXPG6jJ89q9eZHPzCO87EjBcXeeLL6dEt/VTk7og
      WFlAll7BoJR1dAXeetRzhBrtIEf+sYNAJZFujNtn93yLxw0bHWttuml83TGjyCGCDSIzLHQq
      VJWhHmaEoshPxZiSAC2tQR6d6dfGRdFSMJNneDBkRvKFl1K+fuIqb795jNv29jFUl3zh6SX+
      z4dOcc+xMd5z224+/8h5u0bS0FcPef/xIfrCNjePZey6N2AjGSDVgl+ZW2Lq2mYxTlGccBJH
      7Jjc2uQD0HzubTGPrbK968R6A4TQexWEXaaPN/qurYeat3YqCxRR6GCZdt0qZUYUSpQMaGcx
      n9g/zM8dOki/1PSJDEFRJLkSwB6zye6gxcJ6jbOdKo1BuGFAu2BMCIqBdh1gpT/Ln5ccSEYj
      Ba49kYUsa6sZ/89Dp5m6f4KP3TnMWP8Apy8YPiRWkEgEGUpJOg6SFEFQ5EpJfy0kVL4ko601
      6hfCJpqIHHd7DJ71KMl27201awMYV7N0KahxdrOGNjA8YdhRb7v5CM4s9/EXLyW8euEa4wM1
      /ucHBhiu+sJPxR/erCqFcNJX5JjSK68+sA9EHrwH8NCrKZeWNnjwEzvZ1V+0IVrtTPD0yRW+
      /cI8QszhG3sESnLP7Qe4Y1eSr9dwNWG4anhyZphjB3dx5do5cryHAKHQQmDd/84cLQUpBpMl
      kKb4mKq3dG3zPatIFrnCuSMyv6HLn35dBgPQaAyxC+/IQNsKEijvIyjuDUPBj9xziPdMRGSZ
      YSY2DKqMcZmUTnHtEEbhExHAqGnS3AxJB4Pi1JS9neK3XQCvpV3/8gthtAQR8+r5VX56tMGH
      JDwXjJDGSwRCUw8DqoEkwJAaQ5oJUteULwgkaarZbCf014IerGjHoILAOtRyx1exIX7trfnT
      oLMiY8lfQ3GLoYWW3fx5OK/6WCfg0WaH12eXuXh1jc12m5lrKb8VVbhzf8Qnb/FKGDnD4dBE
      F2+YgugdqOtSfk8sVLhpMubjtw5iSFhoVXhqCi4udHjslavoLEAIS5xRRdFpa0YGa/y3b6/Q
      TDISrTAGNhPJcC0lyQTjQ32MjTRYWF4DY/OMfYsoawFyTi8pnZpjLCwxb14Vu9hcrssE5f0v
      HXVuPd4ahwmAzGC060yPQIsEpEKqwHqLUYAkS2F2I0PtyLipH+4XaSlwr+gsCq5yeUqux2WZ
      ZjWoMBqmXFivMtnXIUATvJkttwdhXpcXvCTXJuHy/DpXOoadNU1VFJk+tgaophYqMgybsSZz
      3l4lJFpazOqrPmvf4UVYaGHjg5SNK/LA2i2j96q6WLRcP4AyfDEY3zYJQ7Pd5ndOrnBpoUMQ
      xNx7cDcvXTFsNjOefn2RS3OCDx6ZZLB8Erh3dZdl8Zi4dGaWYNrsZkRsAmppyMV5zeRom7Fa
      hweOCk6O1Pn8t5eAKoiYfbsnmV1cIowki6sb/NK/P8faxgbD/UOEUcodxw6xq1/RjDu895Dg
      xJkq80sblkjcGghwPRcEUikHCQVCK2sLepPM+i3Y/i38uzuG7PqSf8u7vCTRGdbYKTBCYnSG
      xkYPSxGhVAVEyGMnpnj6lOGu4wf4+cN1jldblmnc8zLt47CchU1aCLsqasRGsjIjqdPh2cUh
      hlQHtf/AIZcQ8waLUrKA+PaTIm9rU9zniU4ISWN8mPf2pezTG4TGEAWSaiDJtK0qIQVkBmJX
      OUIbg5IurkbbRsmJD5/QmkAF1n5bOmm9gppb7kt7602olmA9bRRjXSHkiZag2t/PDX2Kn7lx
      lINDNebaKSudmH1jdUb6q+ye6GNXI811GD9PY7weVLzMq8rCfWYhiKSVhVQTw8DFVfpXWlyr
      DzJSixEIUq04t2rDqlutmPWNhGpV8cDb93PiwhLNZkaaStabCUkKwzXJw89dJE4zRgfrfPWZ
      c6SJzRvu2jJAaNef2YA2GWQxQtuIzDfC9N2/Kwoh+7n2KsE58XvYU9LJ3vLl7JNlYeWTZYxO
      QScIV2YlzSTTc6sMjA1yzyCuSrqF51J5z7kbgRAkGSzKGvuDDQaVoSI0HR3QJnJKcC/Uf4Or
      iGssplw271mCEyy2U+ZFHzvNplPKXFdIKcgMpJlBCUEUqLzBncXWkOmUMLSWgTCwDGe7U8pi
      4V2H98wn2jvrjSzpA975VBpajtGHiPnRBsQiIxpSIBIg4ZajNZaODjBGygIVlhcj1kY0A2Gc
      Y38PbXLF08FEU4JKSnql1LCj3uH8hYDIlEp/uONiV6PDe44Ns3JgjL5A8FfPXeaB23cQVmtM
      7uhjeq7l1lizuRnz2IvTYAJeWp/nlTMzLh3QSdEynRpb4UJrl3iuU0yWIvK8AdMjtd/a5aX9
      G+UVFPj/zZngzaxRntZs/4M2gTDIICLLFF94+jzjjWP8rVGbw5051OCZyVexmDc1ZtIaN0Qp
      582ANb8HkhurTcsAxkut7+PaziWef2YEm5tNdmlXSdloQlXE6SRa00kyIqVKobLeamIIQ6sD
      GGMJXDkOtw04nMdYysIJZZxZtXTkGjxC8mMjN6EayPW0yMfRO6tQguRrq5IXZ5rsG4XxPsVn
      Xl7ipp1V/sZtNQ4OpshAkldqcO/2CyiwJlxv5jUaFjYCas1OfmrFmwZG7PfnmiFHJuqsb66x
      0BS8+9gIujLKwvo6rU5hoLBrW5RqEQh0VmRalS/r5LHN+3xmmtTXr+S83Z5u//utd5fDrbc+
      Y5usN7oh01u9LGl0SFNty+MGFdabiscuL/Gjo/1EpIXRBJObzKUQ7JItQgNTVNkXLNIJI4ZV
      x4ZCfB/C308ZJ1tLPO7t9RrbpVswGkUEjkiFgFBKR9AQJ1leJkUbQ6CsDVhJeyIYoBMnzg0v
      iaohaZY54rdhE+AtPV7ZtbDKmMK36XNkS3AcH4ejcYpi6QvawPeSCt85P0V/rcEPjETcHqwz
      tquf/+vZWZ47X+F3P7WDfpHaCFUndb1OIKVidqNCarNmyDJNpyOJpxN26yTHo5X5Fk/qKs+c
      X+Hy6jIfu3MfB4ZrvH1vm1evVfj3T07zxMtTZKltR1UGoDivqS0ya6ynFKzlyHG2zlJIY2y1
      BZCOcXyrWH8VVdneiBgLpd7DGw9zvfWrTBnFn3afinyM0vdy619RXSIXokZiRJa/s+xdFhhM
      lpEZ22IVVafTSriaRuwRcckH6GCvh4CAkIqJoE1fCP0yRhiJDAWB8MH338dlPD7z95Xwr3HZ
      N4OhtYpoYwiEJNW2p5dxXWFqYQjGkCVWMQ2EIFQKUTJrek1eKUWlErGyso4KBULa0Ikks6eB
      ryFvY6ucgmqMYwjT41k0COOgm9sc6fSEtgqY3zQ0Wwn/4+3DHA1aCA17KgYpFPMrm5xfMbxt
      kpzpvJGsk0nmroRUpjcITOH17sOgjMXcayJiQVQ4s9Tiv7y0zM6hkH/64R00kzaPntU8dXqR
      F84ukbRdLjEmj5hEOBijS8wvAwyqe/uMAZ1g+/EWpGsQ14172+rQErkC6RsoFVEA/pQv/upf
      UmYAaXwJ9O6aRl2xSz2WJOv41E68upaoPt0WuwZCaBBx7oMZqY2xR2xaXdFkRe8Huzv4iAIl
      IECTGphrBoyHCZVQEnQpON/ntVVyGHAD6AtFXrLQSIFUAaBJ05RIBVSUIiMjNII0LRRGb8JL
      Xcy+lJI0SYhCRTWKLPYXEKBIU02aZUSV0DKMsCmFRWiC18dMvjsFBC8iFT3T9JOxsLzO7v4h
      DssWkclIpeJEqrl1d40NU+fuPQYpDBrFxZWQ0/MplSDkxGXDT1fWbcw7vtVsrqmzJKo8vGZ4
      7MoCpy/MYVD8zH91mFpg+M0vL/Doy9MYE2Jr6WBPxECSdWKyzKcTmqKOqhagNDIIET6kyxOK
      Mfk/ryfdt8sGs5cLjhY5/3Rp/130YkqE26MXeANFl4ugdPno4vJ4rLDSQIAMqkRhhUoY0u50
      csyRF5uQIcJI9vWFeVPGSCnbo86tURAoQiVJMs1gtskrG0M8f3WFP3vmPD90+zj/wy1VC4H+
      /7vsskshODpQxeaB4hR6TSVURIGvFWSJo6ZC2jqxOFqnqCAkiRPyUGohCMKILNMEoS8pqJFK
      UKtEdJKEKAyIk7Qg6tJG2W4uhu1yWv0GWoKDWEhOrWbUVGgtUkhCofkb/SE37evjoaUmgbLS
      +T+8aPju63PUZI2VZJMP7aggIp1XWvdpLkIIVkzEP31+lgsza6B9DpLh09+8xp9WQ147t4BP
      4vDKSZYlNoYpTawlBN84W+Vz9NLSrpNLlPHEX6LgYk2K63pKbJeU7xHzXqcqdKltkmI8rIG8
      olw+np7v5GNzv1dKkRmFkBWGBvt5//HdfOpog7MrbaSA2U3N5fUO/ZWI+WbMRmy4e2cfQrRz
      qa9cbNbJVsij023etquPW/tSTm9I/tVjr3FhdgUpAr70wgIfPnDAWYG2027e5NreEmC3vr8W
      cKha8vBKYevMS4k0mixzocGZJgxC6iIkM7aVRJIk+BggJSBQgk6nQ1+9RqBc8V0PuIzNH07i
      hEAp17aVHEJ1jc44E6pzoAlwnmyK8o0CAqGY20hYo84OYSNZh0zMZH+df3LPMKttwXIbpEz4
      hQMjHDQtMiMJ8G16pBPCBoxt1vzddbgws4HREVAky09dXbfrYizh23s0xtgmdsYlk3gjgd0k
      KwLt4WWrZBtlXPU4GzJgoaibq4/JyS0zb7qzQLmHmrUyeUtXbq50J2eZ4PEnr/dH5DzYWyGj
      xJhWnCNEhJQVDCmZ0Ny6f4JfuimgJpvsGTE2TAZQqmJRHlUyY5jVgktpgyjN6CDZSQslIx58
      5CrnFzqEqsOe4WFWmxssra0jibjpwE5SNcB3ZgQBfkDm+zOHbXd5Cdxqd5hPBSOhrfQgJdb0
      pDOqUZgnrShle7ZKqUgz1zdMWuyrtCBUgkajar26ouzVy/wLXaM9j+Vx0lCSZtpF/cmSCbSA
      RL2nO1glMgoM/bWQPuGtJpKODIkn6jx8do3/8MIS440KHxqssLfPBvN5d3oOt/L1sH8uxDFR
      JOi0PfGXiDFL0Tohb33qbd85E2W5op0P2Kte2mZ5GSDzXl9HWKL09beKcrfCpeLYKFvQcqLv
      UapF6TnlWLEyFCszQM44YKtDmxQlLHJ/fWqO1267mVsjm/88rAx9FZsbkGTQSVL6KiFDMqPT
      abOpLTq40KkTGUGtHmH0KnGWcnFmEeOYul4P+efvGuefPb7GXz45S2AzY2w9mOvZd7e7tvue
      X7801ZxYbnNsTFh7PoZKELjEdpGHEEtsV8MUbVMjlbX9t5IYrRP6alUCpTC++JbOyAwEypZk
      z8NaESWTqMmtMtr4igxOxItSvI7bmVxxM4ZQwU8cGqShU/pEjAdS80bxuddWubbY5GduGOS+
      PkFDx1bHEaJ0ujh9tWQfm5F97B2OuPkgvPD6FOUirkKnmLRjoUwuiDTCtYt9M8hiX5i5VEqX
      WtoF3t/6tf3e9yivDin4ci6U5ulP++3uLb9j61z8MzK0SWwhW2FVqUEyFnSdUApirTksYjTk
      0QASiAJFJQqpJTFJqrlJtXhkTnNtaQW0zYPwiU3GCOLY8PJGwNzKIuuby6Xq0LlpqmdcXrHK
      v+hBbglkiBKXu/VvpRqNIk5TpLAWGYkiiCKCKCSJO7Y+jctI0kLSGBim02mTtFoYNO12xw1e
      E0UR6xubdJKUWiVyplNXhS3LbHkSxP/L25tHW5Lcd52fX0Rm3vv2V2+perV1Ld3V+6bWZrVk
      LbZljGULL9jGxvaBwWax5wADjIYxhzlwAJ+ZAcPAMJgZBsYDto8xg4yxLWOMLKHNUqsl9d7V
      W3V17fX29S6ZGRHzR0Rk5r3vvVq62446t957996MjPxFxC++vz3AH6lKt3oIphrZi4dmqvEc
      1hren3VCmVflc9cDd9DnL08ljE61EOej4Wwo8xpvEkiMAOf0JOcL4fUy5clXLrC8uu1LR1UL
      wNPKBuNUHWEXcHNzAddrbFeL2xuvfaa2zscnDduoMq/usShjX7t08w2388GdWPF2r4BTIe4g
      dtbg/OHNqoxtc80MD0IczhY+clBput0+3aLg/ixnRY1zqGUg2I3KPCdVikQEWxZkrYwCxacv
      5/z6q1t85uwyZZF7aBngnwsxHwfnDnBlc5vZiVE2NtdJvEpQGk8ZDq/hE7fS0zqaLgW14OQn
      hKDPf3RmFKFPlnhdfWkdYyMZojVFGVwLlPcRtYDWCVonKCoCo+sAACAASURBVKCVanY6JaVz
      qCL3RbSNofAYiU43Z3QkJUtrpzhxUeElXt0aKRsc56o8RdTP5R9UKhGoEvLicrZ1DOkERR0g
      g49Gqw94Tw8dOOMTW44vvXaVC0tr7HQ8vXyQT/RR8eZ9Y3x8r4RsaR66DC2SGzBzGziP95cK
      +XtcjHqKVvqYUWzvzHHiSdBY/F6T5q+J9d8UiC8FXmkMcPXJJc1xu6Cq9DKaC7BOGnQaaHHt
      +EMAKwWSeNV3pvzayB0kpk+/75lelqY45+jlBVmWsr3d47ktzc/+12tcXe+gnEPjMxi6ijEp
      EMtDd4zwlx7W5PkEr1zUPiBz2D8cN6gylqGP62UwOEEOH4xtreVTF9Z46O5xskQoSqEfVJba
      CK12m7zf98UhCIvWlHQ7OzhrvNOi+ACZsZEW/byg2y+9b5DowH1UJbdopbAhrNP7hejaTbqp
      EhyeggrixiMyvC3eNTuqHCvYZkzj6K9ZsxLYVJ4LtTC8fnWZF1/f8gyBmAQ24npbFxIPWdtc
      Q1ceIZofx63BUd+Xv1d8opj7J7pj3wwV7XuvEKSC0rRbGf1+v/FhUJdW9w7j8YOqxrYP36/G
      GRmQQMgWkXHwQMbxzFC4hF4ImAFfhDHLEnDeK6AsS7pG83NfXWZps4d2jvfePU/XZXSM5eXX
      LnrZSrz27uJaH+PG6PQLlCvqmOB9WY2N4mXY+Mo1Fs4QrZzG4S22zy926N895YPDtSDG0en1
      abeyyqXBuXrRedzukMRrHVppwvjYKJ1OJ+T6DFZFZ0lDntEsSYlCfDzCleAF4ZBx20Rgorxb
      VyyuMXjeUT2fB1y2Sl8SXSxc6T3XI6xygbfoMDHPMUVq+2z0Sr547hqg/ZHu8lAwMW7GWkPj
      UxaagColEuJNKiMGY3LrBb8P562u2r34I5zx0NQfMaIS0iStNoBSinbW9jHfVShm8/6ugQz2
      v79fUw2LdJqQZC2+54F55jNLn4RpVZKIj78oixwtjjTRtDNfhuuiafHsxWWyTJPKOEmW0lne
      4KXrGwixeIYFSRhvj/FGN+OV1U2MmCgDNHHiXuSKu1maTGbgy56IAdq4nMWVNb6wPs93zQqt
      VNNKhMJY8qJAJwlK+RrDSeL93G1RUBYe8xdFyUg7pZ1qsvFR1jY3fXLdEDuglY/9zbLMC0zG
      UBZlpaUz1gtIHvJ4WBL/lkowJmiiNFGtGOFD9O13oS9cjAPwrMpGdB1cPRb1GEtO883S5xPP
      LdHraZwrwPSrBV/lwLNB0K0snrtXxPDpWpN7cJE1v7Nnc1EV7QZPAGlO3LAA7GFHFHolaNrE
      luzsBMhGwp3HjyFKsbG1zeLKIgbjmY4L0Anng13iaRZPpupeXoFRhepb6y30FozeYZExtoAJ
      bUnwwVeSaKwBZxyFKbECabvFgdJy18ICl9c7lAV84blLYGK6ypikTYF1PP3KBf70Rc3qdg+k
      TVIPbb8jcC/C7k17iRARR5EX/N/PXmXsm+/j3tRyQu9gDOSlQxc57VY7RGqZqsBdv9+vj8sg
      7JR5TqZTtnthJ4fdD43YXiVYpbBlcPOtMr/VKVagTsUYF7NDsKUJRi+p+YCruaKIYMoYwdZc
      PzVhjHWs9Xt8Qdosrm2BLb0/jm1ix+YGaPjw3IjZ30AAvvmlg5y/yeRd42L/nKp6/vpzn3Gs
      Su9eCft+E75x6RoOQ2kMSZJy8uhhzl+8gjUFA/n+G49ev+cF0irotNKAOZAerpzid554jR87
      dhcTbWHDJBxJcpwtvQZKe7W5iGAQ/tGzmzz7xhWvUIgPpzxDjn+64EDYzfvkRUKCxip964mx
      btZc5J4NDLu02uWzbyzx+N2TiPjaWnmR026lGGMaWoYwXc5hjYc2WarRAjaE9Flnsc7nClJK
      yPMiJJA11REsOJ/ZQaTm0g0A3FzUrirhWo9/999UAnQl7MfU7Q114xglloxPv77ITifHuTzo
      6Jtxtbae6H1W9e2ood9sq4TjSlAWaKRXcdV3Qp64hsVWCHhfSgpbEJMBl4VjfaNDmrbom6IS
      Gj3zkYaM4psWwaAQ7Qt+WONVzgBWMpCCUkp2rHC+aNPSJaJBSYpWGucsSQJdl/D3Pr/M7zy3
      5G1FDQYVGZ+1CSIJaerdJYpSc2hhghMHJ3nmtdW3YQM01CoRJfi/Hbbo86Wz53np6AO8Z8Ib
      xRCfBiVNtC+EkHgoNDLSpsx7iEuw1pIliqIoaI+MkDhvNNvp9OkXJWXIoZ/388rQFk3pQvAJ
      b+S0jFyhUjUGbqbC2FXI7Fy5TqkYRONz/9cbh4pTxlPAOcuE6/Nwq81/Xtnx/vnO1Ji4qT0j
      wp+9t4DQkAZvifQuXrX7smGkJOFNR+COkT0MyQgCsXKNDzCvZSbv3l3nF4qqX0dOr7eDKU3Q
      +MTHdgPwMg7UewVor9Z0IWgfnx3cKY2lpNsR/tJvv45ONGWxzb/84w9yPOlzdls4u+L9rc6u
      7PDLX30DTEniUibGR5iemuauO8a4/84RThwZ49zFLu02PHxmDKU1L50v+fBJx8K08B++PvfW
      NsAwwZ0/2QAb4LJme8fyhatbvHNsPBDX0c9zRkdaGGOqdCfWGB/q6ByFsYyKQiUJvbygX5RM
      TE74cqllibO+2F6WehtCUZSBezZq2tLg2mGafMnVuA68F6jWwY06QCQLIet+WFxhQUAdlK8q
      rug3T4FiW9ocW5hh8dqGT+nuHNEdOZCHKnCmcdIMt5soa/aeBNFe5+3Km3y3xvURqyOqEUXX
      8NupYENDm9OsFgkVnANLd2fTq0PxtJRYITG2RiqaUlKfRNk5THTbFq98cEWOE03PrXN5peW9
      XqXFP/7KdY7PT/FLn3+ZbtlHa0dRChrHzPgUH/vgcX7yB45ycMpUGkRfdGQCUV7L6BxMj4xw
      enyDRMPq+tbbB4F8C1qSCjManIV/+8xV7j1wFx87qEi0kCgJOB4QhSn9AlZaY8oSJUKnl9Nu
      ZxifIoyd7W201kyMj5D3C1LtawmoJKmKdZvAoRTB8CGCK0JJpngUu5pbxglvBtKEpd14pljs
      og6wACq5RUTouARjckZbGkeOo/CLq9Gvz4cZhez6Tm9Hq/zfq9pe9QKuZLwIeW4KsRoi9z5w
      bVCwDf5GQQ1dQaVA6+H7KaVwoirjZLTaV/1K9KSNTAScKCbmR3j3O8f4vWdbWCZptUZZXlrh
      g++e4K/9N/dzdBYUJUorslYb8PHQxlqK3BvFkiRlpCWMtlskGn78I4fe7g0gFZE9iSyJK+jn
      LX7ppWXef2CBqdT5tCeKwIEESRKs9QvNRzBBp1+QphqtNdracGokKHG0W0lVQ8BZ61Oue4BK
      nHbrGjge6iJ+YfHF/JDgN4cxxk9YWNSx6EW0IMcIowGfHHzOodddm89d3eTrz52nLD1HjPi5
      cvNlsBJ6vdAaGDL+37zPTVujtJEkoQ6ypz14B8ThOxLuUUGnhmzkf2+M29Vcv3aBCF0ocMYH
      s7u6IgoBge+5x0X8mGI/SmmkEaNcpbLB4Sxo5xhJunzsfQd4/J6Ed//sQ7QyjTHCCxdP8cAZ
      xdSYQYmgdcvHi0SG4EDrDNXOSKxBK0WWFKRphhLHSsd5LdCNuNGNp6Fh5Gju4vh3EFzFdHnl
      6jp/7+JhTqY537kwwl3SQYtmbHzEe/gV/TAwodfLsUXJ+mYHEJIkQVCY0pCm3g9EB02QLX1a
      7QgxI+FNgDuV50ZMSx4sxibU41XiI7cq/YaNamk/mbqho/aVXaR67sIJX8lH+V8//wKdHUtZ
      9IL/CeCiV2vkls1EoxGH+VxJQoBuEm875F8fNxLDMS0SwT3Omfj0YWpcBO5YETR6YJpduKfI
      kPDtXF2I3BELSVfjVkpVCgxjTcR2DfeNvdZSlD0UxoGzOYJFuaCCxla3cCKktiDXI0gipJLw
      0Xce5fF72mhlmBgxjI+2USKMjQjbkjE65mLhH2Lma51kiGifMRtFIorLiyV3jBYo3eLyuuOn
      f/6Jhh3gRm3fj2uC744qivtYgbWUeYfPfv0lWukoX5if4ON3jPCDRxLSLCNJCqz1+X6StMVo
      kqJ7fcrS0M9zir4hTVIyJaA0RV6SpKkvWKds8AYlJNGikkcqpOFC3K71x4YxtlqWUTiu0pqH
      UyLOpw4TXnlAiodMHZfysy9v8o2Ll+h1PCe0rkCwla5/kHTDjCZwOlGoOFYlQ9fUl+0FR3a7
      F+wBVxr9VLp4P2Fx4urihK6mSvWLa5yUrg5kGbTwCnWV993NMyUNaCyKRLWwpoN3Da9hWRyr
      lQydtrnr8Dg/+G0n+ZEPj/vYbSckaYIWbxFOEihzL8NZ4kkdqs5EnTzOC9yi6OWGA1qjteLw
      dMH/9GPvvDkEah7J+wZR7NkGJ8MZoSxKrHRY7Sb8n0+u8sh33s0RGSF3limnWUi8VkU7od3O
      6HV7ZGMjWAtlUZJo76DmcTs+A7OlirUVvDOccY7SOlBClqT08rxa0VVIoUTsbOvJjEJq1GDg
      oVGkgYhQWscGGb98uc9XXlujLEJGM8qac7ubJBkIO9OJBd3yiye4RFCNYY+gker0uEHXQ/PU
      PJ1pvDugEm6cOLugl6vlurgF43ej9uxGY3IuZpFTOBFOHl2gX2iuL14MTELAhZrHAcZa1eaB
      Oyb553/lQU7OgWjBOp8zKGu1vJsKlvGWcHHD+AwjWldxJwRVRuR+ceSnjiU892LCO9oFiXZ8
      7CEVs0LcpFXqRLeLcLfeHLbIcTiWrq8jSvh8XvLn32k4MDXCtbWUVy8bRpd3mDNdNK4qh9TK
      NOVIhgm5X8bHRiuHN1H+O8YE70rnQoyB3wxFWTRl0aDeq3N62ohdG3CuWjRh4qMLhQBLtPnb
      zy7x8oUVn5JFvDOb25UecH+OWB1LIrTaIySJo7O9XU+EC4u92oj79TRM/72+VZ3Ru7/d5PyN
      e1X/R3jTvJOr5QalPd1v9KT+EgcUWCdcuHoFrVIgFvoICzXKWKJI04SPf/MRzhzV6EST5wUU
      gk4TX7JJ4NVFxU6h2Ol75Yl3DQvyh0goRBLnwcNkpRwnTyheumi5e0ZxbZPGCXATFNTkELe2
      +MNSEvxAojNYWYIGYxW/9eXz/JlvfwjB8e+euM7JuRbf8vgkl64kdC7lFP3SF/Bx0Jsb5Y7T
      KVhFdnab2dKnVkd57gDOu1c7QZQvxFaXf3JVLKn38PQTaF0syO0XXLUYJEyL1BoUnN8s/+F6
      h5feWCNaLuNCddbgncNUA1jts2yFSggtupsUnsAV3QavqpmP/3i4z+Y8NOCExKfymaFdUIE2
      Z6eKnWhsvAo24gi+DQO3qjyHlcaZYAwT8XTfaxVUGirfgRhvJfdRcN7JzsXU6AKiEw7Oj/Nj
      336ErKXpdbo+cjBN0ImPk37+SsrklOLOg0FGi6o1wcMdpE6LGZwnvZbKMjlmuZBoVrcteVnu
      hkDDsZvx5/Cij0fbrTa/O72wYyw4JVy+3uWTX1znz34s4xuvrvNzv3KZf/rTj/DHv2mU/A7I
      +z6donOQZQWiDa32CNfbLS583bLQ7ZAkGlEa50pfphYfFG2iXSDkEYIa4xJOCM+zYyYxoasS
      BC/otjF1VonwytF85coazqVB6KyIEfoORiJR1ca6KV32OF3faqv6GlJ7Dt+j6bAWW205D0yl
      8ZVqs+Pd09WAq8cNR0TcnL4vXaW89OnRvUIjUuzA5CijSZ/OtmcwWZqFMrpCvxD6RjixoCqN
      HVFzFe7jTygPuQZo6nx6mIVZOPeqcHx6D1eIvVxxo3qseQIMmMhvaeL8AvHXgDKCUZZf+8Il
      /uS3zPHQkRafKxSf+uI1vuc9d4KH95Sl1zQYa2m1U3qdDnOTGTsPjLL9ZJ/x0tBViq7LGBOL
      dcZrnlAVTHJ49+YS6JIwIjakabf0tfAVN8FXFxe5vNIlUy02OyUPLkzywwsJlwo4nhhmtWGV
      NmOtFsI2tU6m8fw2hmrGJGC3ukB2y1JN//z9vrMnlfdY/AMGrn36GYgHcAaHwVfijKlfJKg0
      PGTRWleQ83ZsC57La7T2Hr3eUz9Yhp1DsGys7rDdS5kbN6FMrqBVwmpXs2kzHr0ngjKJwhyx
      tlB4GOLpV8+Bt1U4Z5ieSHgxVxyalMYGaGDAejftT7S9INB+hKiMIgEctFtt8qKPpeC1K5v8
      3X97hb/0PUfZ6qT87hPnefaS8NCxFNFewHHOYg3oHJQY0jTj8IzlhcPjyGKPq8dHOH5McfWl
      lJlLK35SQiKuOMpcZ/zShuap80t0+l1OLRzgjrlxPpgZlnPhypbj+VdWsDbBKsUrl1f5+sIM
      19ZXePjoLH/z/gO0xPH+hQleOLeEV70mXgaQUALUlQ3o0STsgHTRoPee1NoXXu692GSwvyg6
      iDTfquBPZR2vTihP3yiTRFtKHLY0n8UB4lBYxBR1Ib49hjsAzCp8H1XNPvoLIE1TxkfH2e5s
      YFVGqlJ+/LuOMj9lUSrj9RVNp9QkiTA+rrnraFib1mKDOlZJSA/pXMO4hodwEoNhwvkgGYlO
      mZq0QOE3wJDOoCbcHot/P+5xq8e3OG+JK2yBKwwFik9+7nU2t3b4H3/kbi6tHOQX/+sqf+uH
      5tCqT+msr24igrGAchjjg6cfeMBx9dgY94yVGNPl6D0ZFxbHWOhv++xwIhQWnrITfPqV6/yn
      F69R5D4zwyuXOmQjJb+aZuR5iVZJ5ZmKCM4qzl9ZBad48vVVfu3wBH9qtuSjB0f4jflZLl9b
      QVGGjWAbnKY6c4b+Hqby/q3JfG4sag1tqvBe9Gqq7QhU/cU7RBkgnsyusehrvf/uDRtln0qb
      dqOnqeRvf492axwrKTNTYyyvrGGM4cEzJ7i0uInVs4y1cj7xI/fwk390jlQbnr6ace/pjHYr
      9iO+L2sRrf29VeKfxnpYJtEiLYAKz6kEQQc5D3AFKrHg9pABmu1GC7v52S3JAr6GKADr6xtY
      8TpgWxYcP3WSC1slE2Nt/uS3zPJn/+HX6K4v8Be++ygHp4N+P2hrlEooitxbEEVxbM57+HVK
      x/gIjN3Txjzf9dkWUPxmb5x/9eXnWV0JHoeqj+d6Cf2upt+xPh2fK0IccY4qxBdoCPpka1KM
      GsHQY4YeC9MpV64l/hmcQjuLiYs1yEbO3ZoMsJuugzTei+5wYzh0o88qt+NY3cY5ohtlfVLf
      4NpbuMfeg/LXLxyc4/DMKHcszPPCaxdQTpEmfT7+kTN87zfP8eH7EwrrKFyKpBkjIxnRhdoF
      hiOV+3rIHucE6/xnxvgiLA6DkCESgqYweM2TZ1hKDLj8BhsgMgFXc6RmG87qdUtEiQHKmEpX
      LsAb51/lJ//4uzgwlfG+u9t83+N38KufuYCI5hM/eIgsKbD4UkjWMwB0EvW8/njNMl+T7Phx
      wwvXJjm2vM6ibfM7Ly+yulKAUVgpA7jTgRj+QaVKKRIWhvFpRiQluN/CuaVN3MwICSUfPTrG
      U68s0j50DCWanSuXEOkEmjXx/401Ns33a9vDrbUbMadaMBy6W4PjE6pcIk3lwK3d+5YXf3Xw
      CTjvuHjh8kUuXhJarYS8sDz96kV+5r//Tn7kj7wLsTnnX3uKiQlhdPIgO/lWQ5NmwZb4GGfl
      ubsIdQVLnxpdlEKFrCFIiqetQaQI685rVcrSMwJ98tRdf+vCxUu7iFV3G4/iQcPM8KK/NY5U
      H8FUNck9tPnGS4t8+aUdsmyE73zXFM++0eGzX7vKxRXDN90/Qyu1Fcrwrs9CKxsBUSEZlO83
      L0p6KsEt+WzBv3Ghz9LaGlhQeDdlryK1SLTYGuMhQ8UBY4Y3hxbvLXJ9u8/h4wvcqXLaWYvf
      emOThx67j6On5pmdm+bK62/4zSW+6pR2tpIHakoOU7m5Um598Q/SdYjuFakbwSyADslqCQH4
      XlaIhrvBOR9uwyfRrWyA4IvoXctFcBJKE4WuCnwgzTc/fh8/89d+hKMLMxTdq8wfUKTaMjM7
      x+Z2l5WNnCy1tLS3tVjrUCoLsq/3ZiUav8J7seq8syWmyCmLvhfsjc+X6hwsr8LCyE0g0DAB
      9voZa0XdyvW73w9EwlGWli89s8jTL6/wN378Hn7wW0/z4qubfPXsNhvdjOkRQ4mjX/ioIFMa
      cpWTZCNkrTZFkeOswYni2ELJtdYkO0uW6Rd6lYXRBAIgNXZVSjUqvQyNz0bFmqXXM/zqq9d4
      4L4DbBhIR8d57tw6abnF4clRtLQxsu0JbcHiVXthOfBmFvjNWqTfrraHhq46xaPM3FDv7oXj
      b2TnuRWZr37i+pT2fzrva6UnOHNmln/9rz7BgXQK07/Ga+euM54pdDLJcrfL3LTmyNwoF6/3
      WdkwnDrknSHjYm9aWrzjYlltcmuczymWtEjTjCLv4UwMRRV0YYNW6zZaUx3afN1uqwxMhBQc
      Ilj6lHaHTmE5eyXnO9+RcfeZWZY31viL//RpPveShAqf4lOlG0vezyn6XUxZYMuSoij8e9Zy
      8EDJsZPCxaVNP5m2RKznDL5qhMEHrhgGbaSDE28raJRydrHgV9I5/stKn05fmPrR7+H+b3oI
      M3WI9//g96PSSZRzKMo65PEPtO2hiYufND6qND/sFlpvKMS+xeah2OC6UaIR3Qat+K7v+FZm
      RttoOmzvbHBwsuCeYzlnjvS5e2GbwwcMzlqOzydsdeA/P2nY6RHwPsTaYdXZ5bxzpDUOUSno
      FJ1mlMaStcZIWqM40SRJiprI6BfqFjdABY9dI1VIfRTenktE4D54RuWChVhcijIgRZ/nXu/x
      3GXLt7zrOPMH5nj5Qoef/eUXee5ygihfWM9YwBrvXmEKVMwU0B4hzw2dfs7zFwquXV8llget
      xt0YR2lKn57FgagU0S1fuBlAHMb2sShaieLg9Cyf+dJr/No3LlL2DW2Ed84qVlSfC1evcs+9
      96Lb0ySSeghQaVRqi2rTzbh+vdnTYQ/OHT8RIeb3cc77AdoIXavXPnNzC+O52feGP3FBzeqU
      T357aKbNd337BxDTo18uk4xMolRGCO+rTm2sxVlDvzB86B2KlW24sgI+kCdWx4l3VMERzr+v
      08zbnFSw1yhFa3QUlbU4upBwdrN98w0gQ6+9CPHWLJjNIw1KV/Lki+f4yf/5acYSw3/7fadI
      xXLxUp+/+s+e4sUrXu4pTRk4u8EVhefiARKYELl1cbmPNQZMyMAQGUW4qxPBKYXSKWnWRqUt
      JGn5WNUg5CsjSJnTyze5fv51ti4vMzF1hMn2DCvXLN948MPoMqd9+BSmNcfCibso0xSrjC/0
      sO9J4Bqv22/RM3VfqjbWOdSZMJq33m9O3/5WQ0HRmiQz/KN/8FM89tAERe86GIMrkwBNqY8v
      ATCYskcrdYy04NRhYWoy4ewFyIsmDQVRKSrJ0Enm08aLAAZnCkzRD7ELCtEJE2MjPHBv680H
      xNyy5ucGNKlxaaMP60h7hjWzzj/8lSf48Y89iqaDsSmXlzR/+xdf4Z/81N0sjFufKQ5oBVd3
      66y3HIv381nbKTxfEBs13eHW8XeF0hkqbVErYcLKUAqcQiejvPO+ee46NcVdCyNs5Y6VjvDF
      r17m4qd+kefLH0Xf+SGWTYfRI5tka0ucPnE/r198nTJfCwKm9zr9w1ht+0obEa7u4Xrx5k+g
      G4wjQJ9dor8I9997km/95vuQYhuxLTbXt1m7+iTH5uvKMF6I9cE2SaJoJQZnDKI0U2Oa8VHF
      ucslEyOKhdkoCEd1qS9o4pxPsuCFAe0rZkb1tAgr20ldKf52Z2eXq+6QNujNEDWa240YlFFs
      bhb8/K98DWM1ihJRlrPnO/zLT6/xM99zAOMMuASxFm0Fa8LJgHePTYMZXYZVkgI60WTZqO87
      bVOWJVD4b2kBo8iyEX7sux/knlMpv9c7Tm47fPeJdY4cMHzf46d56WrCZ5//Ap99dZ2Wyeju
      bLCyss69Dx/hSHmY1Y1RinyHYnsjULnOnPFWaHSTL/jFvt/3b+Geb+VEb/D6xptSkX+klfA/
      /JXvRxWbFMa7ty8trXBitosOTnFex++CIUtwztDPvRbHGcEVOSprc9fxhJUN4cU3DGeOaRLV
      XIseDojyKTe9htqf6mVpeeVSycyk9mVSL1y8yJtmT811dTuEExn8PW4goudiePgAj2Iy/4W5
      g1xY3eLDj8wxORK4mUSNiNAvCl8VXeDITIvf+to2nU7XS/+Vj0hCkrXBKVAJk5Oa+07O8h2P
      H+TkyVn6DlZXO7S15urqDp9+4grHRzOeX+vym5+9yr//7XMk7WkmJ+B732OZossLz7zK9toa
      eX+blaV1xlqjTJ46zWPvf5zrr18mL/pUDmYNF2DiZA20hmA39KpVn0OqZSHgYhXUr2HzV3QO
      cbsNyLDfvN3IvuCat2782jxdvYU2jDdeF2oWP/DwGf7cj3yUzZUVOl3LztYOy2vrLEz6OZKo
      GMFVcyYiXF1xLMzFbBJJMIQmjLYTDkwlvHKxRAmMtPCqbvGpXZTWiHiNnIji6orlyrLj7hMp
      k+Pq9iFQkzS7BJ3bhEW1im64o/gjPkjs23H12nXmD09TmHoBldZinEctSZJgjSE3PnzuvtMT
      fH5xB9gk6saRBK3alFjuuneO/+WHD3Fo0pJoQy9X/MzSOK+ay2z1e2xvrwGW3/6PSyRVAt6M
      X/yPr/HAI3fS0m0+8tgYf/SbHuTTT27zyd+7yuJin+kJx7NPPcG1l1/AmC7ZyDRl3sWaDsqZ
      +plrBUb1xluSqRonTJPObxfKqbyC99q3QmPT1WngcQrRYJSwtrPNa8/9Hu85kyKl72RyPg9z
      LCiVBu0IeNnQw9WRdoakaagMH+fB/65FuPdkwjOv5CQaJkdrlWv8aa3l5QuGgzMJ951S1Sa7
      LTXojVpTK/B2YMqm92n82z9vj7mJlNkx78tfOp95ugiFtR14bVCSop3hE9+7wOEFX2VclPZa
      AqW9NktpTpyc5vBUgVY+GP8zLxQ899JVpOwjrkCcOXt7mAAAIABJREFUQznBCuQaytSh24Lr
      bvPkl57kH/zSeZ58OeG513Y4tdDih771OKMjKTptc9/JoxyZHuX4scNIJqA1gvbB/6as1LfG
      2Kqc6Vu1F1Tnw74q6r0F71tRa9/INUM1ro/c18dH6EobJQ4WV5b5d09eJkst7VZJOzO0tHdq
      08mInyeigSvxmjnVwpJgXAa0EMkQSQDBuQJnc5wzPHhaWNl0PPNayeqmqbRspXG8cslw+qhi
      erwyPoEMnAB7bOc32d66X7sPt1NaU4aSSXXTnH3lKv/7b4zzE99xiLlJHyqHw4fNOaoEWe20
      xbGZku//8DF+/tc2cbkAGrTDJcLY3AQfvXcEkT7RAez8csLayjpxoRilSUSjLaA0hw4ssLy2
      iJEtyl6PK691+Nv/5BnEpijaoARJWxw6PMX/9lfvobOcc3R0h69fPM7/9Z+XePqZVzFdQejh
      kYJGdOrduI035vkIlUZR8CHaxLaXgFl/6CpYWTERN3j97TYX+228I0qqjN0Vw6/G0oC2DsRa
      +us9RvvGV4IxfUQSVBJdFvqIxNrH4jdB2EhKFRQGkliOB59MS4JvjyhfI+3kYa8K/f1ncg5M
      WErjI9fuP5kGS7LFGUFCRfmGDDBAylsn1NDXbsUxznOI+h5+9zfSJSJeIHLUGQqGrn/+1SV+
      75l1Hji9wOwEKF1rb6q06+JVovfd0eaek4dZ6yqSLOM9Dx3muz90mA88cphvv7uLBPT5tTcm
      +eLzy5y/cD2Y3DVJKIThnPdF2dnexpoezjrS1iQffM89HF+YY30noXCOAzNT/MAffZCx8Ula
      rYSZrKSXe+erM0fGSEYnuLzR4/0P3smRw3NsMk2rPQlKkWaZV+HawZT1g3tgiOCNqYquD1HL
      0bzQ+165YCm9faXHXrf3nggBY1can+AZID5gpRZRovSh2djI+dGP3UkrHTypnA3MLmTc9ieB
      d3jr9qHVUmQpVKrzmPs71jOogJEwPZGwtA4Pn0k5eCB85myoOG98KS6VvH15gW6H6w+b353z
      Gd+a7rqlKRhkaEPyhUu4dKnDX/j7T/Lg3fN84JFZfuDxcVppyL9jHSaoIDNV8m2PKt5/3xGM
      hbGWF65Kt8Nr10fJtGV9U7Pddzx9ftUnvRIJmeCC2syFGINE8F6GGZKM0S0L3nnPNJKO8cWv
      v87a5haf/vLLdHsdvvD7o3zvh07wa597he3NgrwsabfHUDqlJRbrSlIRdooCJwnt0TFGxw+w
      sXoVU3a8O/uNFuoeCojbtcu8FQ/PwXvqXRt111jCrbr9PjvdHqNZ0PZYKrWnTrLqet93geAX
      frfnGB8Vv4kj5w8ODc7WFn3BMTkmaOUNIc5ZnClCgjNQOvHCMfL2JsZ669An9jN4zFZcpTpn
      TViYmu6O4YmvX+Jrz17kC08f44e/7RjvPZN6vbGzpKJwTigLSxZqG1gLzlqurreYHHccnCwo
      e443VkCbiVoLIZBkLRwJVRJeFD7jnSJL2zx9dpuvPnsdL1CVOFNw6Y3rYZK6/KtPrlOYHtaW
      iHMUvXUA/tPKtfBcDiQjSUdoT4wzOjbG9vY6xnTC/QIVqoXapE3NYaMAGudhT2ds53hr4tng
      9dY6nxnCOe48dYxuv+Ta4jLjY6NsbW8PZNxrDvfO49NMjxm6PUuW+rPBC88KZ3KcLcLJ4h34
      HJBqzWbPMOc0TU/bOhdp0LAFuVGICQ98FJgjZA1MMlSagU+qQ0IVOd+Q2m+xec4YSGNtwFX7
      99EUap2rJ8t7Yjagjquzqu0OEa/xcRN3mhK+9rVLPPnUJeYWpvjQY4f4Ex86xNED3lB2YVlz
      faPk7gXNgTGHcwprhUtLCQenCzZ6mv/64hr9/hbzh+9jfFzY3Fxju9tFJ8eRtE++sYp1OYoW
      ogxFvklRlgFABULHai8iKGV8HnvncCpUtEGHwhiuUYkdHCWrq4v0iwnmDx/n6oUcih6WkqjX
      j2WgKlpWql2FoIOGZL9WBBWmo2mT25tp7a3rk6HZ8InHHIjjtfPnOTAzy9joCAsH5+nmffp5
      v9LeSeTV4jh9fIYXzhvamdDPHUfmhJmJOsgGQGwZ1okDUUy0NJeXwRiFuISYiqYS6iO6i3YQ
      pRGJWfmsV5tmadAyRcZiSWrF7tvDvW/UBoXZ+LAy9HP/a+ojN/4e1Vz+vVL7P65f3eBXP7XB
      b3z2HHccmebQgXGefnmFXp5w8GCbv/mjJzg8M8LslGNhtgvWMTMDH3/3ND/1bWOUBmbHLcZO
      c/Zawr95Yoql9Tk23XPsbLwUuI7FB1l4XCl4v3MbEsg2ZSGJCFhqQdTLFAHvClXGtc5Oh0OH
      5oLhJkQ9hSO/grkVrWrD2s29M1Wg1t5aoAbFGeb0w/Sv+2wkygI2N7eZmpxkbWPT5+Ns+I2h
      QCRlajTlhz96iPtO+PSR1jpeviS0U+GNRcAJhXEUJuZRjWklHWOjCmMcyjmc8zRXSuj2IUsd
      eaG4tqoxDnq54Y5Dgi37KFXXN7OuQGyChNiUJErZf+itKhAh7LKuNCZgmOhN+W2X1blRFVCc
      pr9T8NKr13mZRV+SVBIuXxnlr/+LPn/5Bx/mY+8OWN9BmcMH79wKRzqIEq5tZ5w4lPBD7zP8
      y8/ssNS9BBiU1hT9HMRjShviC+AG7gXOC6LYEHcg8TTzDxQ3TlnmrK9v0Wq1yHsew3puF6qz
      yF5z5arrB8MgG0JwcM/2uDywy31bUx17I2Tg/ZF8DK5w5PBBBMfK2hrOeKu6h64+zbqklu/+
      trt59O4WzpXktsQZxx2HHM+eT5kch8MzhlYaTkcXkoyJn1edJHS7Oe3U1wjb6ioW1zwPubYi
      nDoizE+LT5CbarJUcCWUReFDKMUhQS4wIedpCIgZ1gK9ydbUOtxUHtiLC8VY1bqrKNYM3mew
      /6hVkggylQ06BL+xlJNQv6zAmi55p+RrLy+xXoyw3UsxjDIxalnczNDi6OSaKzsjZJMphw/D
      yk7C735tma2Vq0hVo6xPjAeuY2uHBhmxbYByznruVe9ur+UQUajoFm4c05Pj5Hnps9vFjVPB
      iFqtWC9yqe5XHxDhe0gjsS9BOVSfBcPUrYxcA/0O0nqvHEUO2NzaZmNzg37er84bqfz3Dc61
      WF7e5h0PHidLhOtrjpG2p59WFuMc46M+EUJhDNZYH94YTvxYX1or4ZlzCf3CcfdxmJ2EwggL
      MzA+Alni0+l0uo6Li5Zrq5aZqdSX1o2nb2BYyVs1vAwSZtDnZi8Te80ZhzlZDWeGt467FeFa
      4rUx0iwq5RyI9VjVCSoUr1tf2eJff/JZdJJwcG6GB++a5ZsenAAZ45G7U07d6fGlA167bFi6
      9DKJFdI0o9/vIgHuxFvTuKfHoA5HO8DNxEcg2hxcDrYMp14sRxrVgL6/JGnR669x6NA8S4tL
      XtlXeJWfU3UiK3GqIpYjLtyQyhBg4POazvFfDamGCOlugd4Mbxxb1Q+ou61PcmU1jpKtXDh7
      wbG8YZmZcLx0MeHx+3u0MuHSFcXUuEOFio5agWlCIWNYWhOuLsPCbM7ROYhlYE8fdnz+GceH
      HvUnnCC8cM5y7x2WZFZ4/lyB1l62nJuCXg5bHft2p0e/sRruVv3Ma33Gmx+Dl4pcgCkBFlXj
      Eh8iaByuzLl65SrXr2/wmS9nnLnrAI89eIboySgIiyslqXjo0+9tYssiCO71WvHLWXvJJuS/
      n52c44MPH+KzL11kamSG7W7OTreg39nEmr53wHMOnfqUj9ZZRkdHgmOeY2l51W9+FQw3Uf99
      i3SMqQFjlRuR3ZdWvju3RdvmPWp5xMs2e4zNgat2rWKz5zhzzCsLEi08dS5jbMSyuilcXhZS
      rVjf0pw+UiItG04wr7u/vKR46LTPCmhsneHamoL7Tjg+93RCmhjG23D6sJAl3hP43hMhVBJY
      3UqYGIHDs3bvmOBbJkbj92GtwpuNFqvO8Oa1e/SzZ99D2lOJtVKJKzVcowQjuuJWXoDtYW3B
      2nrJU+dy3v/oLK3U3/uX/9MiFy5cpSh64Apwrs7oXI1HISpFt1pMzR7g5LFD/MWPHkONJbyy
      XfKx952kcB02dvoUuWN8appWlmGsYWpqBiRFqxStUzrdPmnqs1/4rOrRmTsasxrcd18SN3Jj
      hirpErRAMgwh9+nhVuawyVSGjoTB7+Ed9awomBvHlhMcn/M2m9NHC2YnDQdnDHkhtFOYmXBc
      WkqYmazzuL54XnP8oKWVxrSWeDcSwDjo5o5+IUyMllxbFe44aDHWVPWio7fxSMvRzrz7xls8
      AZr5IoL6SfbhAjdtcYHWJXuGBbmbpmmpUFTM8RmBcoQbEXIE2RvC5ko81xbBlh1efnmRn/uF
      KX76I9OYTDMiBikVuL7XLYuvQI5L/LWqRInj2NFZ/tyHj/HgjGK65ViaydhYdvz9d53irkMO
      90cW+PXfn+Xn/+1rjIy02eoaZkbmmZ2dZH5mhI2NTfK+4sB0xtnXrtHPtbc/BP29X8fh+W2M
      amgs5AbZXagcX8UASBmZdIBI0V/HAaa+VmpVq/OEDW/vPa8Dc9L4eDgSwAUYapzihW9cZGez
      wJh5fvgj1vthOUEpx8ykN2glWtHpaXqFh+u9vmAtTIz4Og3nrmr6IdNNohwrWxqthftP5bQz
      jbEla9uKqTH/ndKUvpKQeKOr1ppMvwlv0MG2d1TSm+X+EjbRgKaPmvi3JFjXooTHwFVrVDxs
      di/Ndzx6NUWf7vYmG5tTPDi1yV993ygXrozz2kWDuD5KJtHeJo81XUyp0Nkk3/fuY3z8lNdP
      X8lHmZ5XvP7CMh99eIZE+6LT3/nelI888jAjmeXqquV3n9zmnjsyHjndYnlzkv/300vMjE7w
      1HNv4NOG2yC7+PHbwNGdAmfLSgsTCDVIzcZnzvl6bJW6YECbNCx4ufqH1ABpvxiQiowDrWHE
      C6K7CChnWLm+xfWVTc6/ep658Yf5lndm7HSFjW3F7LRlvO1PrkMzBc+fTxgfEdpBWl3ahI0d
      zXZHuPeOHCUOrQV7yWEJRs/SsN3VzEz5jeVVqYp+YUB8uAfOl9R6SxCoop0MBcnLraHKwY1S
      +wcNb4C9rtvzPdccy/C4hjqVPa6Pb4vh8tIWX3x1m1c2Ej5wosWR+SMsWs1Ornn4znn+3PtO
      8s5T89hUcWWj5M7T8/zpd04w1/YVDM/lo8wcVnz13A73Hp5gpFUiWpFoGM0sqXYcmITH7k45
      dUgz3hKmxx2P3zfK3FTCM6+vsb7Zw5p6XJFBiNYhPsKrM2u6M/jaj97SMGmF7w5nj27SaLir
      W2FwLvjiE/yTXBBMfcUZkFLR33F89ewyx44eYnYq5dCs5epywtS4j+dwIhSlcOJwydSYZW7K
      srYtzE6WLK5ppsZKEu3HsbiuGRsx9AqfeTwvFVPjph59VZ0GtPLOlsbsswH2BjB7IX7/a0yN
      MrCIbrvV1+5KxLUPsffylIzC6+7VsPfk7u5LIOjMu92CN6732Gof5MRki48tZHzszCTvOzLC
      L7y2Ce0x/vRdY/RmZvnE+8e5ZzoH/Lo8oPosM8K3PTbGeNugkpgwy/PGTClSpYINN5Yi8hu1
      ncHM7DxbecriWhdrwtJRLmB4hSQaLUGtF+0PMVV4XOQi3n9pCEZWB2WFXGqaVXJRvN41rtuD
      bnvNtkAdlBPG4rz/SShmXWJNgTgoSkU60uK7PjCGKI/hX7uUMtryJWoX1zTz0yWiBeOg3fYV
      SJMUSiukmXcbLK3Qyiwb24r1bcWJBe8lbJzPFh4TAuhgkXcOXzpq3xMgcgYax131qj9vCr1v
      vUXLpg2oPd5k72/vumc1Zthz/d+EO/pfAiZW3pvRUfLihSWeuNjhVTPCXQcyruaGf//lS1xc
      XOd9p+Z417GME2N9dHAzwPli0Itli5l58JF+1UoCEUysaybKx4k5KI3zGh+xuCLlux7LaI9P
      8MxriziXAYIi9QWj8QWgCepnP/y9I8m8nWFIKK2gX5WfGRVrGwy4VIQ+Yv6niGXiJlO1bFAx
      wrCxVVSJ2jiv4UGt96uyzmu3OsbxyJkjzB+ApXXNyYWC66ua1U3N4bmS0ba/pwunuHWwtKaZ
      nbYo5dUc210hTaBf+g1/YMqvotL4xR+htbfS+2t6hbnJBmA3vNnrtedifKutKlB9Gxvgdm+x
      B5b1b4SsairxUMFaOjs7rK1v8/nXV/nGxRXW19bp7Gxx3Qk/en+blnahEF/UhQuqZ7i6kbG5
      7Oj0vY5bi89F4yyUFvqlJS/9OGLitM2OZnNLODLV59BUi5VijMvXNnBO4RIN2uKUDzZBfBzE
      zcw5u8PTG8/toFFNZAA+opJQY8sveNX8zHdMdP1orgklDX8uEZoDjAXtEK/b31zv8rlvLLG2
      3ead944wMeqwTpEXcHTOBEYUnsJ5Oq1tKqYnbLWwu10BURSlv+/0eKhDER5IhVNIBRX1+etw
      /qq6+QYAdj3cH/jij0OIgtoN+n8r9x7GsnEiVZx0v7q8AYsCW1r6nYLt7R3EWZRTLG6UfPjB
      Y8y3LCLeNwVArKONZU76zJou6VbJxY026yvC8opifMpgnHghjeB67XzunuvLmtOz3Wo8H7w/
      RU1MUyTC0aPTLBydRtoZnV6Oi4aiStDcA5KI3HADWOd9baKFuNmHq3z9PTwb3gDC3usgGrwr
      +0N1/ypPM9GXCmfp7HR5/uwKL18uOXNymqPzUBpY3dRMjUeX9JiAWPwGGA81oJ1Fa803zlp+
      47PX+S9fvs7/97uLfOGpLe4/PcXkWAiwEp879PwVy0hqOTpfknhhA29V3GuR3HgNvU0t6Ktd
      M7DBQ5E346V6wzsN66cbR6NPk5KC1r5usDW4kIUMdODwhd+QzteTt85R2vgMYezOQwOfwNXT
      diIpubdYwwHPtw74CjbRmODi8vVtegLOX29xbC5nLPOai4/cO8GffK+vb+sQfuH3FV98fZvO
      5iRXzi2heimm7NVwyBG0H7ZyDx7W4tQn4CCNvZo0BqVQJ3Vo2FL8pW5gapq0tSrGXwf8byMd
      azdI358DMb4OW9nnK187z393eZO/89OP8PAZ4cqykOeACNdXYXPHURpHr59yZE5Y2YCvvtDj
      Vz71HFevb7K91fPPpLyctLlT8g/+8j2Mj3q69PqOfqE4OO1PzcTv0EECDC63N6PTfxOtcg3w
      oW5/UDtvmOP7n+E/549sa+q0ifF7lVut9owiFmIQgcJ64lZKRvHpubVioPKkcd5H3WQRengr
      bWmEVHshrTDC9rLjwPWc5STl8FyfS6st5sZyMu1lo04hfOONq+zsbKBbBY+99xhnv36FzlZa
      xRU7E42AYexu/5JW9cIdJnrN5ZscPFx1QxpHEcNB2ABNWTL2GtlG3FgGZxyL19b5K3//Cf7I
      B07wjnuP8fmvr/Gpz1/g0tUduv0+OJiaHOf0sQO8fmmFzbUtyrLhwOdL1iMm5dkXr/O5b5xg
      YXaU9e2Sy8s9HrlrhKPhiEoip/jD4vV7trD4642o31J3e8GAG2WzjpNQVVV3xsfm2ljzSwZw
      bq0R0egsYTknYEyvazfWorUEHOA3iLGuInOyVUKoeClYnn++xazt0SXlQGeH0+2cVgpnt6aQ
      eUEL6CqHP7QTy/0LM3xucx1b9vihhRF+/cw8X3p60acGtxYJGdFq13HZRYP96BVVpNXSoGns
      avbR3BiDtI7esQ0sdLNpCzc3ONNne63gk7/5LP/ht5/FlY4BnxNgc3mNpxZXcMbgxNNTGoFT
      Dp9PKO8If+f/+Cooiyktk5OTvOexo3zHe2Z5/ME9aoS9ne3Ww/Mi968JX/XxNo1lt+66lviE
      yKXrnJ1VGnHqDeOcC67PnpOPTozx4L0neN9cSNMoPnEvEsp0AqWxVYXKeNfc1JoRUcLhI5bZ
      V7bIxCLaxykVKFpTCnFwaKrP+aURTs91sE4orZ9gQfHY3B08PmE4f8cUT726xPZOONG18QlB
      ndcSKcKGrLjk/vNSL+ro3Ci1Eqvi2zQ+a/YLNYSt/67R0e5YNb9HwgYPJZg871AYE05RXxA6
      duFzPFtBnPL1z6t7BnZmHU76GEpsr/CJ/hy4fsETT5xjNCl4/IEFknrxvT1tr9oBN23SMMzQ
      UGO+TW1ve4HPZBANNHESK0I2uKYQJki8wCVOobMWH3rkBH/j8TGmslBJntrfpCy9NijItl5X
      7RRdo7G5ZXkzZX6qDMe55TmZ4x0sIgKl9Z6Vea9eGKmyPHd5jGy1YMz1OWJH+IFT9/KuKR+0
      //75NuM/8Sj/7lef5fxli5BhdAjmD/JKVQqpsbH3bvV3FLoih0NwDbVnnfw30jkKti5w4Ab7
      GkBOTbY2dPqEcljx9BgA5q4+CSRoB51YqhzP1T51SCyGYWNlUl9EZWNrA7RmfHScc5ffxqD4
      2G7XD6g6skKAhgR8+Acq+CIkaQsrjiIUe6tOqyATCVTuznVH/mqnEybnx3n/ffO09Y4fv7Wo
      1Gs8ytKGYI7A75zjXHcclzvGVMkR2eLslYPMTxnWtxRrb1geZSmY6CXUKYOxpS3OlWOotYK5
      coNZHGOJA1vy/XORRt5V4rR02Nie4Sd+4Ax/8589jRQZolOUc1hXhmcJsEtuh7oNgVl2z8uu
      U7Wi9X7rwGeJCxfv+t5+Pkdvej04iMbD6alJlldWGB8f5f0PTXB0tnj7N0BT93srJ0DluiwS
      tBZvXQa4WbNY8rJL0hpjbnqWrc01in6nOahdAd0+6knh0Bw+Osc//qn7OTnb5+LiJNlKn7Yq
      mZGeR8U+WLbiRohfen2Eg9qXUrp//TpvfGmMEVdyp+7U6kJ/LAGOaddnarlX9QFUlY0amATB
      0XEp50vNY4fHePyeBT7//CaCQ6ctXwSkKOoUM64hMO7R6kXoBf+aBoJzNyqIEk5WJwimGvNw
      cjNXzW/jxH0L7Ts+fB+P3jvHP/k3T9Lp9vZ4HsXB+VkWl1YAGBsfpd/XrK47lC9fww1eez9s
      ned+8LXfd4gTu+/LEzBOaFXGKHDSOt/+W6JVHBjg+PB77+P0HQuk6QgqaeOid2QFJ4WYb1N0
      giQJOsn4pocPcWq+QAOn5rtMnbJwTPMNM8O57liFcqvDDEic5a5ksxp/Wwyn1CYLOm68mn6W
      YLrfpQ1rBMVXO8LLEV/vH2CutCyeLXnPAweYnxeSUZ/+Ha1JsjGvwRIHZIhrFJeI9A++RS7G
      IFevSJCQi8eV+EwLzo8VVynxnNRp6ONGGa4ipESHV0KzjBNQKRuAKq9QE90PN6UUP/Dtp/mJ
      jx/i6MJsTfd4TbTLhHWktWZyosXdR3KOHCjQJ0+f+VsXLl32HHivV9XVrbc9jTEDgu7NXs2+
      /LXxk13ygQi773bz5oCxsVFmp0YxpGiBbrffGEHQ+iiNSIoKqfjm56f5xA8dY36iROE1PkpZ
      Mm0oUUz0+lztjzCl8woxCJBpWM8TRqXcYyS1SjDC80qWHJ6LAQMkwTglTEmfM8kmdyQ5y3aC
      P3HPNO+7a47JgwfYkhbdoo8pU5/u0cbiEnFm9pIB63sOQnlfg1eihoeGjFQF69TLtamCrTRp
      wcml1gwE2LlXvHP13AM/qmat5avPr/BbX1zmhVcuVU9UjVYp0iRhc2sbBNJU86f+2P28+26/
      s/5AtUB/KO12VGyxCYDl2ede4WzWRpSiKAqv9nRukMrOgdhqXtutlKMHvLrThpJjzjnyUqM3
      C2bTnFFVciEf52Rr2/u5BzeDktp5begh8PCh3gSRKUvz8QS0lmqDRkHTWsukFIgocivcm+Yc
      yvrc2Yb3TcLZYwf55PkpPvWVi7i+UNL3BQOtQ6zFKm9/cfgSUoMpFINdoSH4Do7fNZZ77Uxn
      Ax2bxrcKWrnIBOJm1o2+atvLruv2mkoRrl5f5cri6j6MN9LPa7TKouB3fv8CH3/vnWSp8yfA
      Gxcveum7+dxDu/6224Cg3+Tht9l2CV5uqOvdssZNBfHAYbUDa0tKk4MrEWcG2J0LkABCkQVn
      0Klmam6BkSRlupXTL+H6eov+kuMoHcCRiDd6LZctNkzGuslYytvMui6ZmDApMVi9sXjik3qW
      igpCYuVboyJE9DNSlrYargsLM1EwqkKcQMgsdzDp023P8fiZAzx+Zg6ZPIhMzXPs6BFce5yd
      ThcoibmSxcUNEWFPSHkZoWzVaogmYedGTB+fKUzZwLxIhWkhooLwpLcgE+z+zNtwZNdaiN8s
      y6LxjmJ5PScbm+LRO9sxKN5VMANX77q9b3c7TVUDvN3WvP9gjPZgb4P+J7c4WlsvohpT1XEI
      gw7EfgCx751OybOXcr7jAUs3Fy6+kXBSbZFU0qmfyrksZ44CBBb7GZs2ZVSZGurYUEbVuWph
      1/ieCurU/jp1mVgTvckUqJApIaopA/sNydPq/h9trXNotIdWwh+bF3KXkmrDSnmAX3hlmt/8
      /Qv0t1ewFDgtOOd9gJTz9zDGNAYXWwOyDK71+mvViTHIxGKZXEfw8owaIStIOBEcliZv2xUB
      t4dRs/4e/jQLnsUShQkKTKH5F588i3VnaghU47jmTn0z6Lru8M2h8z06Gn5nH45/O3kum88L
      wxt9N0yJOPaHP3CaD94zhtge1zc0p+Liby6AoMs21rFatFjpZ3QKjc5sxUSHUVb1pFEbVj3T
      4LiV8oat6EYTF6YSQalwooitq9UrQcRxOO1hw8ZIxdEKYZwjaZe/fr/mvgN38XOfGWF75Vo4
      7XKUSxExpKlPXDyMDps0v5W1UluTY4rJYT+vm8zZDSz8w7/v9V5UuVtTUnT7/D+//tKgDPB2
      eHUO4rXhqX4z/cX/dre9HNture3OfDbsycgem8nhuHthhA9Mb/PKRUFbS6KbeQapHrlTKq7u
      tJhxPe6UDpJR6dIlCLe1m4K/XzwRGNjQg89krR3YnLWfZ817tdZ4lyVFUXphXRyVf36itOex
      TvmC1WL43iM7HPtjR/nN1+ZZ3djmK89foN8diG+IAAAOr0lEQVTdBGfodstaXf2m5rPBtREG
      4rN5c+suCte7YE/j/b0vDODO9il2iJZgYcDkMwR/bmd4g1y11hLE+9xa88YSvx5k12V1Jrhm
      /83P4yM0tQqDmomBuwV2Ovj2bs5irOLzr5f8mXdMc7q/Rm4c1igfp0uD8A4Wey2OsY1SQ6dq
      XNRN4TZCJ9ekeJOJDI0q0CTiZSU1hbXyOUOtCbIDyucSFj8fgvctUi504zwjzsTygcltHn/U
      kds2f76/wJefDrJBXFRDlG6Wnq0w2R6tCemq7zY290BAjYpet/7zQTvE4OIecO6r1ktwYWni
      5gEYRWN9B6knmpX3fL2lFhZdFC5uu918AE3FauSeMX/a4Mvd4LFc4zvDQlgs02NxruDJs2/w
      z7/eQ5IMjUULVTp1v3GhaxSudHUUVhPiNN8YYKp7Lf69KeLhsr9QKYVONKJAKX9PhZAgpAgt
      JbS1oJwjESHTKhTzDgtYGpF34f9EDB84OYHo3Xh7mG7g9jugb/IMu4Vdv8D3uMvQabxfXEpd
      YefGc+3vE5L1Im8P9Hl72/7juaGx7SbtRt+7lesFx8rSyv/f3Ln02HZcdfy3VtU5p7tvx07j
      F45tFDkogAKCGQKBkMInYIAYMGDIHIlPkCkjlAkCBhFCTBiAoqCISEgQIhKDRBQgNrm2hX2d
      y72m7Xvt26+zz65aGayq/ToP9wtEXe3u2/ucXVW7Hqv+a9Va/+JLf/06X/uvxKJQa1Taktqf
      753v8xk5rRl3kGVdlg9XsgoPNtdj5Lrd5eAm0NS2nfQX80mpxcrk/4d5VPZCYCHCTJ18KgYt
      nsNGSqnAK8/3c0czD2rfKYR6Cb6r+aYf1e9v68tp/kNYPR301Qxc3VY21sMGqwe4ta94+6oU
      KaIbSVeHrzC8Lp/6yXW5SVZdAq42KbfV6Xp1rs94DMCodrTtKe3Fkj/6u/s8WC6ICFGCU3OX
      +h/OWhpK8DU73sX6uktZBarUGk/soVJsJfa9h36GK8c1jLSaTytvaQemfDEjiqJlYsxU3dJT
      rSTFhePDi4QRuQUYMG7BwQAOIbC3t+jvDd6oa49B262ZvEvXjieNjT9c63+j0tljGXUXX1Cd
      oxoHyg6TTMf3N0peE5ywxrkOVGL39yc3ZIlxLQxipu552BFBdd9y/OoECb5x4i4DY/+WkWtz
      h+/7MranKgOd/rwnv/UkGWguePPBI/7ku2eEGNmbxbKs++T98cUFx7rfSRzMBsvxQKrVPIsF
      xzu80v1Jl9+6pWS8uMeghPJ8J+3oA3QqXGqzHyKY66QwI4iwP58RQzlfQJVkytffPMXapkhK
      G4YM9zWReghePQhv0opS9AwdS+za/jknmqbZICAMuj6t7aOjPMwMK16zXjcr9VSqC/gIDhke
      JFSFjoAzCZWKpNw6ngz1kLJBexMGV9+Ba5euL0+XS5eTMruW2nVpPSlhw4bZ1nIYT+6Rv5NA
      as8hrfib777D/eWcKJm9GAgEchZA2Z9l3ubTfJj3eL09Iln1b4EQlScy4734FO9zQJV4cRaK
      0lwhESVGWQhBmEVlFp00VovEVIGoBTw5MWnXRkGVoEoMblcPEnzXG2NlRggzVJS2TZ15Nlvm
      a/cC3/7+W0g+HbXv1nbfAUO3bVR2bTuQ8tUVclfqoc56/1wm5WFwBp0oNMxatylPpHVp5sG1
      WQGpS9imF76sjXj67FWfu63Feud7iIK1tMslHz5a8fU3T9CgLEJxeXAzAy/Ml7x6eMr+HfjU
      IjlFB8qFKe/FQ9qXFrzykw3NIhb8U2BB1B7nCwUO0q0iMQgxaGfz35vPPIi09Kvb6j0D1UIB
      UoISDAMRogi5TU5BjpHNN6MSwjcfBv7gb+/SnC/JAwl8XT1xHSVsafOJGXqXTb86V27bCNtW
      37HHrdcr9ozzBTLUv6XGwU7ls2x5iUmBMsx5/eP+RtkA35Dt5k0OG/1/N5V3P5KGAE52G1om
      lVi/IQCpwZoVf/7a+/zWF17ljp4zCyASWOWMIUQ1DrUlmfJQDvlgtsfzn1ry4tHSHcoKzLNs
      tNkIwZ21ZjGwWvmmmRYGONXgx3wWbw0/7NHIOTmnae7hVp1QHgFQqUT8RVYpsR8UYqDBiBpR
      Mdrc8i8fzPi9v3qd5ckJTsLo3qNVJ+mn1mXbbqz8D/XBajXDxnEXNaBmYwcN9klklE/pl0tW
      TqQfNtoXVjHoBOyt1UM+4ZqU1F06ufr7HS3fhmzWJcFUH9lRPkKNM+7cBMpE+8Sd4uHqtnYJ
      WMbaE+4df8SX//kxIoGDWWSmToql2jO3fXrW8Nn9U17kjGefblyBLZNw/xnlsSyQMKP60lMN
      AeD2fKQ7QlalhmZ6n7nvfeXroRxX5IJr2ba0uXDniEdItpY5b1uWKTsPkRmrnHjSKF/+9gPO
      T09wJgwPo5RhH24YlJvQAIN26l0Qxv0ymgRdP9v4OwN3+f6Ip9r+U6m/szunle5+aU+LR1eR
      q2Cqm6apzjAt+/om2hsAItmNK/uNsZaL0zP+7B/f4Z/e90G4CMI8CEGEeZwzC4Hq835HEmer
      2OH6GJSXjhoWn1vww2cPeVcP+Ljxzg0V5jDZMS5jpg744Sqt5bwxnxuCiRPyJssdU7ThUCcj
      xBLA//2zPf7w3xr+9e5/I2mMreEmfXC51G9sglU3ie5y3VMkjBThG1Vp0K2xOiJ5Qw9NSFcr
      wbql9/ppW0NvcnnYPUGHeHLATLZzTg+U6Dr4d+BVV4iFsDrj9CTw1bsf8asvHRFtxSxnRB0C
      aYhkDZw1S540kecXw3gAL+Dp/Zan9lpWR/D+4wMenipPny95Vi6IWr0y6zu4P76fduKDvtrv
      g1aI0ikDHXSpK0cnx82JuS5S5jv3TvmLb74F7bJ7v2G7j3ZgryEXZcsf6wtDcezYAGtzNrJU
      ImB8t5gbTNCy0sZggVDYUSAj0rvYXjnPqrXdIE0H99VWIl3rvP6TSZ6jetYTGPuBf5m3CMX0
      Z8sT7j04Jc1eJuYnzMwI1fxGZi4Q55GQ5s54ULhHM3WAUXaTjReOGjiCd+7v8/zZ0l0bjEKH
      7lawat3J1cRLz/nTrwgDWCR9WUEVyaAaaXNx2z5P5Nz48aNyAYSNQuc6g3+aOsA9GCpV+Fa4
      1a8I2TetStL6fuLtITv1v22pwPHyW/30vFC4HJ1f/Ubw4Ybp+oN/nDbh0qnprLs3Keuyb29k
      7wiJfOt77/L7X30XWxwwi8pcA/NZKCZII5CZH0YWATApdClucjCK130B/iLOrIZCa4mWTCqK
      dZ28lVy3GhhE3YRJ0RNUiptIsf64N6eRUmaVM03KrAqLXBq2+Yb2u004vKlth+WslbVNL7yl
      Kikl3lU1Ih051f//tNknpP98qk/s6sPrdrCJYhIhRhLGX/79G/zmn/6A147nhP07SIhFoVVS
      Fs6Wif29hSt0Gcx6m301a/ol7O9njts5JyxIVYILoP3xQFb+hRLrKwomeSRd63ckOClsNrez
      NGVTTEX4iaf2iHE7EcFNdYDrmLenKYRACOsr043qBcScMym5L4kHZuhEFxj+Hj66OcNR/W5j
      IbnC+27exd5+v6ZhNV1RHEuY4ecFdRZ25giEMsTcl+Zb//42v/32PX7p517ld3/ts3zxlQPa
      5RkiKxZnykyMO/NI0woJK9LXj/7UEEgpY9l47qkLPp7PeZQC8p7wYjynNee8D1IsIeWnwwcc
      PuCsF+7+PA7BdAhVA3/UJ0w2/uN/TslF0RYqCjBGZy7dOHWq+vonW/YJhu2eUipsG1fXT9fq
      YRlKbHKUcsN35HSMJa00wiVn3XCl2j3kyvcvKQmmTbbdSnT1DhOpsbUTDqDhi6w/hWjZwLLc
      ue9a8XD8+PScb7z2A77zxkN+54uf50u//gz3Hwv7R8pebFmEyFIN08DZasWy9ailoEKQQNMm
      InB0sAQT3tlf0DYXROlxPUVZtFpHGygu0tv+O6u2OD1ntsKqVqBSVuH+qYEuIEihVTRnjK7a
      xI1hUH12SsLbx/tOTc59Uw8d4dioIF+5NgVCmUE080MGUrLRhkSHywqhkj/oL7Nt3A5f5P8q
      3daSKKOG3qxIQ1nlhkt6oVF0mhBPHj97weMn8MffuEtOK37j518hpRX2vEvwxSzQrBJzHO+n
      nBBCp9hK2a0xMV54ecXxW3t8Ri6K67JPNLfq9P5CXaxBgUo1oN4D1spJKQgafSIh8L0PhTce
      nCIhktOq7CusuyRI0U8s5bU+/iRzaV2Au09ly+CX+g6D5zpDgc/e2xljvRFEwXcTe7zcN65X
      SlENqIY1nL0180vJ/ytV938h1z45ehg7XI1LH+gcxYYPFBaJhKUWmfiYwBxNLcuzR3zlH95m
      YSuO2pYVB+h8hoTgfjoqxGLpadrEyok/XWdYBdqsnK0ih9KO6qbi+whRy2DGukXAD+WuEwkI
      Dm9Ftaw0zpOfs/H6B4knj0+Q3EBqPFpq08SXm7iaTKB0t5O7rUc397ZxE33EBjmXwR+UWAd+
      F2vaLTF9g3ZsAWXnbrvUHTTeYJdva5UuOZtvW61YT27iKws+yHA1rFAwgARMnYlSclskv/V5
      jCorqEZSalguGx6ctPzKsy13HyZ++mWP1AqFan05MF0+uog8/jgys8RMjRWB4ycLfkGf+JkC
      ArFMRi2KcDV5dkNGevhu2eOC21ydXAoOEiOZ8J/HS3J2uGMFOknJ1b161xv9qhtknSAX5+zs
      s3SdYD2/YuOX3vHtKqnqaTV120CGQ9foB6CIRuLPfuFnusLrpkp5rCtYN6iB3V9VAdswNLex
      yvVJdo/owRLYPWHr5d92EqmxANbF77r7hrsMO9+9c+hsr3rFzpkwW3D48ufJzygH+wvCc4G0
      amnPTlwyNyvmdW9C5/zUj51TTDQAxOM95rxQ6uauFvXYMVd6+7BI7+h+U68OqmCGZJ88ddoc
      LyMfHfyQX/7F51y38A0JV/tytR/1dvhK+3gdncCkF6DUnwI9B4ePBTWwwf5GfSkr+syOEibl
      TaxOhls5Q6SLgxTlR/ZRw6fmKHCoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Deaths per Continent' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
